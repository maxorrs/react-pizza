{"version":3,"sources":["assets/img/pizza-logo.svg","consts.js","store/reducers/app-state/app-state.js","store/reducers/cart/cart.js","store/reducers/data/data.js","mocks/pizzas.js","store/reducers/root-reducer.js","store/reducers/cart/selectors.js","utils/cart.js","components/header/header.jsx","store/reducers/app-state/selectors.js","utils/filter.js","store/reducers/data/selectors.js","components/nav/nav.jsx","components/sorting/sorting.jsx","components/section-pizza/section-pizza.jsx","utils/prop-types.js","components/pizza-card/pizza-card.jsx","utils/pizza.js","components/pizza-list/pizza-list.jsx","components/footer/footer.jsx","components/pages/main-page/main-page.jsx","components/pages/cart-page/cart-page.jsx","components/app/app.jsx","index.js"],"names":["SortType","POPULAR","PRICE","ALPHABET","SORT_TYPE_DEFAULT","PIZZA_TYPE_DEFAULT","initialState","isSortMenuOpen","activeSortType","activePizzaType","cart","AppStateActionType","AppStateActionCreator","type","payload","CartActionType","CartActionCreator","pizzas","typeId","nanoid","isHot","isVegan","isNew","title","structure","image","options","dough","isAvailableDough","id","conditions","size","price","isAvailable","DataActionType","NameSpace","combineReducers","state","action","produce","draft","push","pizza","map","item","quantity","getCartSelector","getSumQuantityInCartSelector","createSelector","reduce","acc","getSumPriceInCartSelector","compose","connect","sumQuantityInCart","sumPriceInCart","memo","className","src","logo","width","height","alt","to","getActiveSortTypeSelector","getSortMenuStatusSelector","getSortTypeSelector","getActivePizzaTypeSelector","filterByAvailable","filteredOptions","filter","option","filteredConditions","getPizzasSelector","getTypesFilterSelector","types","sort","Set","getFilteredPizzasSelector","activeType","filteredPizzasByDoughType","slice","a","b","onlyAvailableA","onlyAvailableB","priceA","priceB","typesFilter","dispatch","onChangePizzaType","changePizzaTypeHandler","evt","target","innerText","classes","classNames","onClick","sortType","onToggledSortMenu","onResetSortMenu","onChageSortType","sortingRef","useRef","clickOutsideHandler","useCallback","path","composedPath","includes","current","useEffect","document","body","addEventListener","removeEventListener","ref","onKeyDown","code","tabIndex","role","Object","values","PropTypes","arrayOf","shape","string","isRequired","number","bool","oneOf","onResetFilters","isShowResetBtn","onAddToCart","onChangeQuantityToCart","doughTypes","getDoughTypes","useState","activeDough","setActiveDough","find","defaultSize","sizes","getAvailableConditions","condition","Math","min","getDefaultPizzaSize","activeSize","setActiveSize","setQuantity","isShownPopup","setIsShownPopup","enablePopupHandler","disablePopupHandler","imageRef","availableMinSizeIndex","indexes","index","getAvailableMinSizeIndex","availableDoughIndex","getAvailableDoughIndex","classNamesCard","classNameTitle","onSubmit","preventDefault","newPizza","findIndex","prev","method","idDough","isDefaultChecked","onChange","name","value","defaultChecked","disabled","htmlFor","viewBox","d","fill","toLowerCase","filteredPizzas","Footer","href","rel","MainPage","CartPage","App","exact","store","createStore","rootReducer","composeWithDevTools","ReactDOM","render","StrictMode","getElementById"],"mappings":"uXAAe,MAA0B,uC,uBCA5BA,EAAW,CACtBC,QAAS,2EACTC,MAAO,2BACPC,SAAU,oDAGCC,EAAoBJ,EAASC,QAE7BI,EAAqB,qBCN5BC,EAAe,CACnBC,gBAAgB,EAChBC,eAAgBJ,EAChBK,gBAAiBJ,EACjBK,KAAM,IAGKC,EACO,mBADPA,EAEO,mBAFPA,EAGQ,oBAHRA,EAIM,kBAJNA,EAMI,gBAGJC,EACM,iBAAO,CACtBC,KAAMF,IAFGC,EAIK,SAACE,GAAD,MAAc,CAC5BD,KAAMF,EACNG,YANSF,EAQM,SAACE,GAAD,MAAc,CAC7BD,KAAMF,EACNG,YAVSF,EAYI,iBAAO,CACpBC,KAAMF,IAbGC,EAeG,iBAAO,CACnBC,KAAMF,I,QChCJL,EAAe,CACnBI,KAAM,IAGKK,EACE,cADFA,EAEM,kBAGNC,EACA,SAACF,GAAD,MAAc,CACvBD,KAAME,EACND,YAHSE,EAKW,SAACF,GAAD,MAAc,CAClCD,KAAME,EACND,Y,OChBER,EAAe,CACnBW,OCDa,CACb,CACEC,OAAQC,cACRN,KAAM,uCACNO,OAAO,EACPC,SAAS,EACTC,OAAO,EACPC,MAAO,wFACPC,UACE,gbACFC,MACE,qGACFC,QAAS,CACP,CACEC,MAAO,2EACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,KAGtD,CACEN,MAAO,uCACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,OAM1D,CACEf,OAAQC,cACRN,KAAM,uFACNO,OAAO,EACPC,SAAS,EACTC,OAAO,EACPC,MAAO,uCACPC,UAAW,4OACXC,MACE,4GACFC,QAAS,CACP,CACEC,MAAO,2EACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,KAGtD,CACEN,MAAO,uCACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,KAGtD,CACEN,MAAO,6CACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,KAAMC,aAAa,OAM3D,CACEf,OAAQC,cACRN,KAAM,uCACNO,OAAO,EACPC,SAAS,EACTC,OAAO,EACPC,MAAO,2EACPC,UAAU,4kBAEVC,MACE,4GACFC,QAAS,CACP,CACEC,MAAO,2EACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,KAAMC,aAAa,KAGvD,CACEN,MAAO,uCACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,OAM1D,CACEf,OAAQC,cACRN,KAAM,uFACNO,OAAO,EACPC,SAAS,EACTC,OAAO,EACPC,MAAO,gEACPC,UAAW,4LACXC,MACE,4GACFC,QAAS,CACP,CACEC,MAAO,uCACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,SDjI/CC,EACE,cEFFC,EACA,YADAA,EAEL,OAFKA,EAGL,OAGOC,6BAAe,mBAC3BD,GJ0BqB,WAAmC,IAAlCE,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCACxD,OAAQA,EAAOzB,MACb,KAAKF,EACH,OAAO,2BAAI0B,GAAX,IAAkB9B,gBAAiB8B,EAAM9B,iBAE3C,KAAKI,EACH,OAAO,2BAAI0B,GAAX,IAAkB7B,eAAgB8B,EAAOxB,UAE3C,KAAKH,EACH,OAAO,2BAAI0B,GAAX,IAAkB5B,gBAAiB6B,EAAOxB,UAE5C,KAAKH,EACH,OAAO,2BAAI0B,GAAX,IAAkB9B,gBAAgB,IAEpC,KAAKI,EACH,OAAO,2BACF0B,GADL,IAEE9B,gBAAgB,EAChBE,gBAAiBJ,EACjBG,eAAgBJ,IAGpB,QACE,OAAOiC,MIlDiB,cAE3BF,GFIiB,WAAmC,IAAlCE,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCACpD,OAAQA,EAAOzB,MACb,KAAKqB,EACH,OAAO,2BAAIG,GAAX,IAAkBpB,OAAQqB,EAAOxB,UAEnC,QACE,OAAOuB,MEZiB,cAG3BF,GHQwB,WAAmC,IAAlCE,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCAC3D,OAAOC,YAAQF,GAAO,SAACG,GAKrB,GAJIF,EAAOzB,OAASE,GAClByB,EAAM9B,KAAK+B,KAAKH,EAAOxB,SAGrBwB,EAAOzB,OAASE,EAAgC,CAClD,IAAM2B,EAAQJ,EAAOxB,QAErB0B,EAAM9B,KAAKiC,KAAI,SAACC,GACd,OAAIA,EAAKf,KAAOa,EAAMb,IACpBe,EAAKC,UAAY,EACVD,GAGFA,YG1Be,ICLjBE,EAAkB,SAACT,GAAD,OAAWA,EAAMF,GAAgBzB,MAEnDqC,EAA+BC,YAAeF,GCRvB,SAACpC,GACnC,OAAKA,EAIYA,EAAKuC,QAAO,SAACC,EAAKN,GAAN,OAAeA,EAAKC,SAAWK,IAAK,GAHxD,KDQEC,EAA4BH,YAAeF,GCDvB,SAACpC,GAChC,OAAKA,EAISA,EAAKuC,QAAO,SAACC,EAAKN,GAC9B,OAAOM,EAAMN,EAAKZ,MAAQY,EAAKC,WAC9B,GALM,KCiCIO,G,MAAAA,kBAAQC,aALC,SAAChB,GAAD,MAAY,CAClCiB,kBAAmBP,EAA6BV,GAChDkB,eAAgBJ,EAA0Bd,OAGKmB,OAAlCJ,EA9BA,SAAC,GAAyC,IAAxCE,EAAuC,EAAvCA,kBAAmBC,EAAoB,EAApBA,eAClC,OACE,yBAAQE,UAAU,SAAlB,UACE,sBAAKA,UAAU,eAAf,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKC,IAAKC,EAAMC,MAAM,KAAKC,OAAO,KAAKC,IAAI,+GAE7C,sBAAKL,UAAU,oBAAf,UACE,oBAAIA,UAAU,gBAAd,yBACA,mBAAGA,UAAU,mBAAb,4JAGJ,eAAC,IAAD,CAAMM,GAAG,QAAQN,UAAU,gBAA3B,UACE,oBAAGA,UAAU,gBAAb,UAA8BF,EAA9B,aACA,mBAAGE,UAAU,mBAAb,SAAiCH,c,iBCzB5BU,EAA4B,SAAC3B,GAAD,OAAWA,EAAMF,GAAqB3B,gBAClEyD,EAA4B,SAAC5B,GAAD,OAAWA,EAAMF,GAAqB5B,gBAClE2D,EAAsB,kBAAMlE,GAC5BmE,GAA6B,SAAC9B,GAAD,OAAWA,EAAMF,GAAqB1B,iB,SCG1E2D,GAAoB,SAAC1B,GAAW,IAE9B2B,EADY3B,EAAXhB,QAEJ4C,QAAO,SAACC,GAAD,OAAwC,IAA5BA,EAAO3C,oBAC1Be,KAAI,SAAC4B,GACJ,IAAMC,EAAqBD,EAAOzC,WAAWwC,QAAO,mBAAmC,IAAnC,EAAErC,eACtD,OAAO,2BAAIsC,GAAX,IAAmBzC,WAAY0C,OAGnC,OAAO,2BAAI9B,GAAX,IAAkBhB,QAAS2C,KCZhBI,GAAoB,SAACpC,GAAD,OAAWA,EAAMF,GAAgBlB,QAErDyD,GAAyB1B,YAAeyB,IDNvB,SAACxD,GAC7B,IAAM0D,EAAQ1D,EAAO0B,KAAI,SAACD,GAAD,OAAWA,EAAM7B,QAAM+D,OAGhD,MAFiB,CAAI,sBAAJ,oBAAc,IAAIC,IAAIF,QCM5BG,GAA4B9B,YACvC,CAACyB,GAAmBN,GAA4BH,IDUtB,SAAC/C,EAAQ8D,EAAYvE,GAC/C,IAAMwE,EAA4B/D,EAAOqD,QAAO,SAAC5B,GAC/C,OAAIA,EAAM7B,OAASkE,GAGA,uBAAfA,KAON,OAAQvE,GACN,KAAKR,EAASC,QACZ,OAAO+E,EAET,KAAKhF,EAASE,MACZ,OAAO8E,EAA0BC,QAAQL,MAAK,SAACM,EAAGC,GAChD,IAAMC,EAAiBhB,GAAkBc,GACnCG,EAAiBjB,GAAkBe,GAEnCG,EAASF,EAAe1D,QAAQ,GAAGI,WAAW,GAAGE,MACjDuD,EAASF,EAAe3D,QAAQ,GAAGI,WAAW,GAAGE,MAEvD,OAAIsD,EAASC,EACJ,EAELD,EAASC,GACH,EAEH,KAGX,KAAKvF,EAASG,SACZ,OAAO6E,EAA0BC,QAAQL,MAAK,SAACM,EAAGC,GAChD,OAAID,EAAE3D,MAAQ4D,EAAE5D,MACP,EAEL2D,EAAE3D,MAAQ4D,EAAE5D,OACN,EAEH,KAEX,QACE,OAAOyD,MELE3B,I,MAAAA,aAZS,SAAChB,GAAD,MAAY,CAClC5B,gBAAiB0D,GAA2B9B,GAC5CmD,YAAad,GAAuBrC,OAGX,SAACoD,GAAD,MAAe,CACxCC,kBAAmB,SAAC7E,GAClB4E,EAAS7E,EAAsCC,IAC/C4E,EAAS7E,SAIEyC,EAhDH,SAAC,GAAuD,IAAtDqC,EAAqD,EAArDA,kBAAmBjF,EAAkC,EAAlCA,gBAAiB+E,EAAiB,EAAjBA,YAC1CG,EAAyB,SAACC,GAC1BA,EAAIC,OAAOC,YAAcrF,GAI7BiF,EAAkBE,EAAIC,OAAOC,YAG/B,OACE,qBAAKrC,UAAU,yBAAf,SACE,oBAAIA,UAAU,YAAd,SACG+B,EAAY7C,KAAI,SAAC9B,GAChB,IAAMkF,EAAUC,IAAW,YAAa,CACtC,oBAAqBnF,IAASJ,IAGhC,OACE,oBAAegD,UAAWsC,EAA1B,SACE,cAAC,IAAD,CAAMtC,UAAU,YAAYM,GAAG,IAAIkC,QAASN,EAA5C,SACG9E,KAFIA,cCgFNwC,I,MAAAA,aAnBS,SAAChB,GAAD,MAAY,CAClC9B,eAAgB0D,EAA0B5B,GAC1C7B,eAAgBwD,EAA0B3B,GAC1C6D,SAAUhC,QAGe,SAACuB,GAAD,MAAe,CACxCU,kBAAmB,WACjBV,EAAS7E,MAEXwF,gBAAiB,WACfX,EAAS7E,MAEXyF,gBAAiB,SAACxF,GAChB4E,EAAS7E,EAAqCC,IAC9C4E,EAAS7E,SAIEyC,EA/FC,SAAC,GAOV,IANL9C,EAMI,EANJA,eACA4F,EAKI,EALJA,kBACAD,EAII,EAJJA,SACA1F,EAGI,EAHJA,eACA6F,EAEI,EAFJA,gBACAD,EACI,EADJA,gBAEME,EAAaC,iBAAO,MAOpBC,EAAsBC,uBAC1B,SAACb,IACcA,EAAIc,MAASd,EAAIe,cAAgBf,EAAIe,gBACxCC,SAASN,EAAWO,UAC5BT,MAGJ,CAACA,IAUH,OAPAU,qBAAU,WAGR,OAFAC,SAASC,KAAKC,iBAAiB,QAAST,GAEjC,WACLO,SAASC,KAAKE,oBAAoB,QAASV,MAE5C,CAACA,EAAqBjG,IAEvB,sBAAK4G,IAAKb,EAAY7C,UAAU,iCAAhC,UACE,sBAAMA,UAAU,mBAAhB,wFACA,sBACEwC,QAASE,EACTiB,UA5B8B,SAACxB,GAClB,UAAbA,EAAIyB,MACNlB,KA2BE1C,UAAU,gBACV6D,SAAS,IACTC,KAAK,SALP,SAOG/G,IAEFD,GACC,oBAAIkD,UAAU,mBAAd,SACG+D,OAAOC,OAAOvB,GAAUvD,KAAI,SAAC9B,GAC5B,OACE,oBAEE4C,UAAWuC,IAAW,kBAAmB,CACvC,0BAA2BxF,IAAmBK,IAEhDyG,SAAS,KALX,SAOE,cAAC,IAAD,CAAM7D,UAAU,gBAAgBM,GAAG,IAAIkC,QAAS,kBAAMI,EAAgBxF,IAAtE,SACGA,KAPEA,e,2BCRNwC,ICrDcqE,KAAUC,QACrCD,KAAUE,MAAM,CACd/F,GAAI6F,KAAUG,OAAOC,WACrB5G,OAAQwG,KAAUG,OAAOC,WACzBjH,KAAM6G,KAAUG,OAChBtG,MAAOmG,KAAUG,OACjB9F,KAAM2F,KAAUK,OAAOD,WACvB9F,MAAO0F,KAAUK,OAAOD,WACxBjF,SAAU6E,KAAUK,OAAOD,cAIDJ,KAAUE,MAAM,CAC5C1G,OAAQwG,KAAUG,OAAOC,WACzBjH,KAAM6G,KAAUG,OAAOC,WACvBvG,MAAOmG,KAAUG,OAAOC,WACxBrG,MAAOiG,KAAUG,OAAOC,WACxB1G,MAAOsG,KAAUM,KAAKF,WACtBzG,QAASqG,KAAUM,KAAKF,WACxBxG,MAAOoG,KAAUM,KAAKF,WACtBtG,UAAWkG,KAAUG,OAAOC,WAC5BpG,QAASgG,KAAUC,QACjBD,KAAUE,MAAM,CACdjG,MAAO+F,KAAUG,OAAOC,WACxBjG,GAAI6F,KAAUG,OAAOC,WACrBhG,WAAY4F,KAAUC,QACpBD,KAAUE,MAAM,CACd/F,GAAI6F,KAAUG,OAAOC,WACrB/F,KAAM2F,KAAUK,OAAOD,WACvB9F,MAAO0F,KAAUK,OAAOD,mBAOAJ,KAAUO,MAAV,aAAoBT,OAAOC,OAAOzH,KAAY8H,WDiBjEzE,aAZS,SAAChB,GAAD,MAAY,CAClC5B,gBAAiB0D,GAA2B9B,GAC5C7B,eAAgBwD,EAA0B3B,GAC1C6D,SAAUhC,QAGe,SAACuB,GAAD,MAAe,CACxCyC,eAAgB,WACdzC,EAAS7E,SAIEyC,EAtCM,SAAC,GAAiE,IAAhE5C,EAA+D,EAA/DA,gBAAiBD,EAA8C,EAA9CA,eAAgB0F,EAA8B,EAA9BA,SAAUgC,EAAoB,EAApBA,eAC1DC,EAAqC,uBAApB1H,GAA6BD,IAAmB0F,EAASjG,QAEhF,OACE,0BAASwD,UAAU,gBAAnB,UACE,oBAAIA,UAAU,kBAAd,0GACA,sBAAKA,UAAU,yBAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAED0E,GACC,wBAAQ1E,UAAU,2BAA2B5C,KAAK,SAASoF,QAASiC,EAApE,kI,SEyLO9E,I,MAAAA,kBAAQC,aAbC,SAAChB,GAAD,MAAY,CAClC3B,KAAMoC,EAAgBT,OAGG,SAACoD,GAAD,MAAe,CACxC2C,YAAa,SAAC1F,GACZ+C,EAASzE,EAA4B0B,KAEvC2F,uBAAwB,SAAC3F,GACvB+C,EAASzE,EAAuC0B,SAIiBc,OAAtDJ,EAlMG,SAAC,GAAwD,IAAvDV,EAAsD,EAAtDA,MAAO0F,EAA+C,EAA/CA,YAAa1H,EAAkC,EAAlCA,KAAM2H,EAA4B,EAA5BA,uBACrCnH,EAAyEwB,EAAzExB,OAAQK,EAAiEmB,EAAjEnB,MAAOV,EAA0D6B,EAA1D7B,KAAMY,EAAoDiB,EAApDjB,MAAOC,EAA6CgB,EAA7ChB,QAASN,EAAoCsB,EAApCtB,MAAOC,EAA6BqB,EAA7BrB,QAASC,EAAoBoB,EAApBpB,MAAOE,EAAakB,EAAblB,UAC7D8G,ECtBqB,SAAC5F,GAK5B,OAJmBA,EAAMhB,QACtB4C,QAAO,mBAA6C,IAA7C,EAAE1C,oBACTe,KAAI,SAAC4B,GAAD,OAAYA,EAAO5C,SDmBP4G,CAAc7F,GAFuC,EAGlC8F,mBAASF,EAAW,IAHc,oBAGjEG,EAHiE,KAGpDC,EAHoD,KAKjE5G,EAAcJ,EAAQiH,MAAK,SAACpE,GAAD,OAAYA,EAAO5C,QAAU8G,KAAxD3G,WACD8G,ECb2B,SAAC9G,GAClC,IACM+G,EAP8B,SAAC/G,GAErC,OAD8BA,EAAWwC,QAAO,mBAAmC,IAAnC,EAAErC,eAKpB6G,CAAuBhH,GACjBa,KAAI,SAACoG,GAAD,OAAeA,EAAUhH,QAEjE,OADgBiH,KAAKC,IAAL,MAAAD,KAAI,aAAQH,IDURK,CAAoBpH,GANgC,EAOpC0G,mBAASI,GAP2B,oBAOjEO,EAPiE,KAOrDC,EAPqD,OAQpDtH,EAAW6G,MAAK,SAACI,GAAD,OAAeA,EAAUhH,OAASoH,MAAe,CACnFnH,MAAO,EACPH,GAAI,GAFCG,EARiE,EAQjEA,MAAOH,EAR0D,EAQ1DA,GAR0D,EAYxC2G,mBAAS,GAZ+B,oBAYjE3F,EAZiE,KAYvDwG,EAZuD,KAsCxEvC,qBAAU,WACRsC,EAAcR,KACb,CAACH,EAAaG,IAxCuD,MA0ChCJ,oBAAS,GA1CuB,oBA0CjEc,EA1CiE,KA0CnDC,EA1CmD,KA4ClEC,EAAqB,WACzBD,GAAgB,IAGZE,EAAsB,WAC1BF,GAAgB,IAGZG,EAAWnD,iBAAO,MAExBO,qBAAU,WAAO,IACRD,EAAW6C,EAAX7C,QAIP,OAHAA,EAAQI,iBAAiB,YAAauC,GACtC3C,EAAQI,iBAAiB,WAAYwC,GAE9B,WACL5C,EAAQK,oBAAoB,YAAasC,GACzC3C,EAAQK,oBAAoB,WAAYuC,MAEzC,IAEH,IAAME,ECjEgC,SAAC7H,GACvC,IAAM8H,EAAU9H,EAAWa,KAAI,WAAgBkH,GAC7C,OADuD,EAAxB5H,YAEtB4H,EAGF,OAKT,OAFiBb,KAAKC,IAAL,MAAAD,KAAI,aAAQY,IDwDCE,CAAyBhI,GACjDiI,ECpD8B,SAACrI,GACrC,IAAMkI,EAAUlI,EAAQiB,KAAI,WAAqBkH,GAC/C,OADyD,EAA7BjI,iBAEnBiI,EAGF,OAKT,OAFiBb,KAAKC,IAAL,MAAAD,KAAI,aAAQY,ID2CDI,CAAuBtI,GAE7CuI,EAAiBjE,IAAW,8BAA+B,CAC/D,kBAAmB1E,EACnB,2BAA4BgI,IAGxBY,EAAiBlE,IAAW,oBAAqB,CACrD,yBAA0B5E,EAC1B,2BAA4BC,IAG9B,OACE,0BAASoC,UAAWwG,EAApB,UACE,qBAAK9C,IAAKuC,EAAUjG,UAAU,0BAA9B,SACE,qBAAKC,IAAKjC,EAAOmC,MAAM,MAAMC,OAAO,MAAMC,IAAG,yCAAWvC,OAE1D,oBAAIkC,UAAWyG,EAAf,SAAgC3I,IAChC,uBAAM4I,SAtEgB,SAACvE,GACzBA,EAAIwE,iBAEJ,IAAMC,EAAW,CACfxI,KACAX,SACAL,OACAU,QACAQ,KAAMoH,EACNnH,QACAa,SAAU,IAKG,IAFDnC,EAAK4J,WAAU,SAAC1H,GAAD,OAAUA,EAAKf,KAAOA,KAGjDuG,EAAYiC,GAEZhC,EAAuBgC,GAGzBhB,GAAY,SAACkB,GAAD,OAAUA,EAAO,MAiDQ9G,UAAU,mBAAmB+G,OAAO,IAAvE,UACE,sBAAK/G,UAAU,uBAAf,UACE,2BAAUA,UAAU,oBAApB,UACE,wBAAQA,UAAU,kBAAlB,+DAEC/B,EAAQiB,KAAI,WAAyCkH,GAAW,IAAlDlI,EAAiD,EAAjDA,MAAW8I,EAAsC,EAA1C5I,GAAaD,EAA6B,EAA7BA,iBAC3B8I,EAAmBb,IAAUE,EAEnC,OACE,oBAA+BtG,UAAU,4BAAzC,UACE,uBACEkH,SAAU,kBAAMjC,EAAe/G,IAC/B8B,UAAU,oCACV5C,KAAK,QACLgB,GAAI4I,EACJG,KAAK,QACLC,MAAOJ,EACPK,eAAgBJ,EAChBK,UAAWnJ,IAEb,uBAAO6B,UAAU,oBAAoBuH,QAASP,EAA9C,SACG9I,MAZL,UAAWA,EAAX,YAAoB8I,UAkB1B,2BAAUhH,UAAU,oBAApB,UACE,wBAAQA,UAAU,kBAAlB,iFACC3B,EAAWa,KAAI,WAAsBkH,GAAW,IAA/B9H,EAA8B,EAA9BA,KAAME,EAAwB,EAAxBA,YAChByI,EAAmBb,IAAUF,EAEnC,OACE,oBAA4ClG,UAAU,4BAAtD,UACE,uBACEkH,SAAU,WACRvB,EAAcrH,IAEhB0B,UAAU,oCACV5B,GAAE,UAAKX,EAAL,YAAeuH,EAAf,YAA8B1G,GAChClB,KAAK,QACL+J,KAAK,OACLC,MAAO9I,EACP+I,eAAgBJ,EAChBK,UAAW9I,IAEb,uBAAOwB,UAAU,oBAAoBuH,QAAO,UAAK9J,EAAL,YAAeuH,EAAf,YAA8B1G,GAA1E,mBACMA,EADN,sBAbF,UAAWb,EAAX,YAAqBuH,EAArB,YAAoC1G,aAsB5C,sBAAK0B,UAAU,qBAAf,UACE,oBAAGA,UAAU,oBAAb,0BAAqCzB,EAArC,aACA,yBAAQyB,UAAU,qBAAqB5C,KAAK,SAA5C,UACE,sBAAK4C,UAAU,mBAAmBG,MAAM,KAAKC,OAAO,KAAKoH,QAAQ,YAAjE,UACE,sBACEC,EAAE,qNAIFC,KAAK,iBAEP,sBACED,EAAE,gUAMFC,KAAK,oBAGT,sBAAM1H,UAAU,0BAAhB,8DACA,sBAAMA,UAAU,uBAAhB,SAAwCZ,aAI7CyG,GACC,qBAAK7F,UAAU,yBAAf,SACE,oBAAGA,UAAU,wBAAb,mDAA8CjC,EAAU4J,0BEnJnD/H,I,MAAAA,aALS,SAAChB,GAAD,MAAY,CAClC5B,gBAAiB0D,GAA2B9B,GAC5CgJ,eAAgBvG,GAA0BzC,MAG7BgB,EA3BG,SAAC,GAAuC,IAAtC5C,EAAqC,EAArCA,gBAAiB4K,EAAoB,EAApBA,eACnC,OACE,0BAAS5H,UAAU,aAAnB,UACE,qBAAIA,UAAU,oBAAd,UAAmChD,EAAnC,qCACA,oBAAIgD,UAAU,mBAAd,SACG4H,EAAe1I,KAAI,SAACD,GACnB,OACE,oBAAuBe,UAAU,mBAAjC,SACE,cAAC,GAAD,CAAWf,MAAOA,KADXA,EAAMxB,oBCUZoK,I,YA1BA,WACb,OACE,wBAAQ7H,UAAU,sBAAlB,SACE,sBAAKA,UAAU,oBAAf,UACE,oBAAGA,UAAU,gBAAb,uBACa,IACX,mBAAGA,UAAU,eAAe8H,KAAK,uBAAuB1F,OAAO,SAAS2F,IAAI,aAA5E,8BAIF,oBAAG/H,UAAU,gBAAb,0BACgB,IACd,mBACEA,UAAU,eACV8H,KAAK,6BACL1F,OAAO,SACP2F,IAAI,aAJN,mCCMKC,GAbE,WACf,OACE,sBAAKhI,UAAU,+BAAf,UACE,cAAC,EAAD,IACA,iCACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,GAAD,QCXSiI,GAJE,WACf,OAAO,4CCuBMC,I,MAlBH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAAClF,KAAK,IAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOkF,OAAK,EAAClF,KAAK,QAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,UACE,8CCXJmF,GAAQC,sBAAYC,EAAaC,iCAEvCC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,IAAMM,WAAP,UACE,cAAC,GAAD,QAGJpF,SAASqF,eAAe,W","file":"static/js/main.016b56f2.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","export const SortType = {\n  POPULAR: 'популярности',\n  PRICE: 'цене',\n  ALPHABET: 'алфавиту',\n};\n\nexport const SORT_TYPE_DEFAULT = SortType.POPULAR;\n\nexport const PIZZA_TYPE_DEFAULT = 'Все';\n","import {SORT_TYPE_DEFAULT, PIZZA_TYPE_DEFAULT} from '../../../consts';\n\nconst initialState = {\n  isSortMenuOpen: false,\n  activeSortType: SORT_TYPE_DEFAULT,\n  activePizzaType: PIZZA_TYPE_DEFAULT,\n  cart: [],\n};\n\nexport const AppStateActionType = {\n  TOGGLE_SORT_MENU: 'TOGGLE_SORT_MENU',\n  CHANGE_SORT_TYPE: 'CHANGE_SORT_TYPE',\n  CHANGE_PIZZA_TYPE: 'CHANGE_PIZZA_TYPE',\n  RESET_SORT_MENU: 'RESET_SORT_MENU',\n  ADD_TO_CART: 'ADD_TO_CART',\n  RESET_FILTERS: 'RESET_FILTERS',\n};\n\nexport const AppStateActionCreator = {\n  toggledSortMenu: () => ({\n    type: AppStateActionType.TOGGLE_SORT_MENU,\n  }),\n  changeSortType: (payload) => ({\n    type: AppStateActionType.CHANGE_SORT_TYPE,\n    payload,\n  }),\n  changePizzaType: (payload) => ({\n    type: AppStateActionType.CHANGE_PIZZA_TYPE,\n    payload,\n  }),\n  resetSortMenu: () => ({\n    type: AppStateActionType.RESET_SORT_MENU,\n  }),\n  resetFilters: () => ({\n    type: AppStateActionType.RESET_FILTERS,\n  }),\n};\n\nexport const appState = (state = initialState, action) => {\n  switch (action.type) {\n    case AppStateActionType.TOGGLE_SORT_MENU:\n      return {...state, isSortMenuOpen: !state.isSortMenuOpen};\n\n    case AppStateActionType.CHANGE_SORT_TYPE:\n      return {...state, activeSortType: action.payload};\n\n    case AppStateActionType.CHANGE_PIZZA_TYPE:\n      return {...state, activePizzaType: action.payload};\n\n    case AppStateActionType.RESET_SORT_MENU:\n      return {...state, isSortMenuOpen: false};\n\n    case AppStateActionType.RESET_FILTERS:\n      return {\n        ...state,\n        isSortMenuOpen: false,\n        activePizzaType: PIZZA_TYPE_DEFAULT,\n        activeSortType: SORT_TYPE_DEFAULT,\n      };\n\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nconst initialState = {\n  cart: [],\n};\n\nexport const CartActionType = {\n  ADD_TO_CART: 'ADD_TO_CART',\n  CHANGE_QUANTITY: 'CHANGE_QUANTITY',\n};\n\nexport const CartActionCreator = {\n  addToCart: (payload) => ({\n    type: CartActionType.ADD_TO_CART,\n    payload,\n  }),\n  changeQuantityToCart: (payload) => ({\n    type: CartActionType.CHANGE_QUANTITY,\n    payload,\n  }),\n};\n\nexport const cartReducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    if (action.type === CartActionType.ADD_TO_CART) {\n      draft.cart.push(action.payload);\n    }\n\n    if (action.type === CartActionType.CHANGE_QUANTITY) {\n      const pizza = action.payload;\n\n      draft.cart.map((item) => {\n        if (item.id === pizza.id) {\n          item.quantity += 1;\n          return item;\n        }\n\n        return item;\n      });\n    }\n  });\n};\n","import pizzas from '../../../mocks/pizzas';\n\nconst initialState = {\n  pizzas,\n};\n\nexport const DataActionType = {\n  LOAD_PIZZAS: 'LOAD_PIZZAS',\n};\n\nexport const DataActionCreator = {\n  loadPizzas: (payload) => ({\n    type: DataActionType.LOAD_PIZZAS,\n    payload,\n  }),\n};\n\nexport const data = (state = initialState, action) => {\n  switch (action.type) {\n    case DataActionType.LOAD_PIZZAS:\n      return {...state, pizzas: action.payload};\n\n    default:\n      return state;\n  }\n};\n","import {nanoid} from 'nanoid';\n\nconst pizzas = [\n  {\n    typeId: nanoid(),\n    type: 'Мясные',\n    isHot: false,\n    isVegan: false,\n    isNew: false,\n    title: 'Чизбургер-пицца',\n    structure:\n      'Мясной соус болоньезе, моцарелла, красный лук, соленые огурчики, томаты, соус бургер',\n    image:\n      'https://dodopizza-a.akamaihd.net/static/Img/Products/8a813e3b734e457c848a60fc70a100d5_584x584.jpeg',\n    options: [\n      {\n        dough: 'Традиционное',\n        isAvailableDough: false,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 300, isAvailable: false},\n          {id: nanoid(), size: 30, price: 400, isAvailable: false},\n          {id: nanoid(), size: 40, price: 500, isAvailable: true},\n        ],\n      },\n      {\n        dough: 'Тонкое',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 500, isAvailable: false},\n          {id: nanoid(), size: 30, price: 600, isAvailable: true},\n          {id: nanoid(), size: 40, price: 800, isAvailable: true},\n        ],\n      },\n    ],\n  },\n\n  {\n    typeId: nanoid(),\n    type: 'Вегетарианские',\n    isHot: false,\n    isVegan: true,\n    isNew: false,\n    title: 'Сырная',\n    structure: 'Увеличенная порция моцареллы, томатный соус',\n    image:\n      'https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/f8ea1b5e-671d-4460-9e3d-ce720b95a1ce.jpg',\n    options: [\n      {\n        dough: 'Традиционное',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 200, isAvailable: true},\n          {id: nanoid(), size: 30, price: 300, isAvailable: true},\n          {id: nanoid(), size: 40, price: 400, isAvailable: true},\n        ],\n      },\n      {\n        dough: 'Тонкое',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 550, isAvailable: true},\n          {id: nanoid(), size: 30, price: 650, isAvailable: true},\n          {id: nanoid(), size: 40, price: 850, isAvailable: true},\n          {id: nanoid(), size: 44, price: 990, isAvailable: true},\n        ],\n      },\n      {\n        dough: 'Бортики',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 35, price: 800, isAvailable: true},\n          {id: nanoid(), size: 40, price: 1100, isAvailable: false},\n        ],\n      },\n    ],\n  },\n\n  {\n    typeId: nanoid(),\n    type: 'Мясные',\n    isHot: true,\n    isVegan: false,\n    isNew: false,\n    title: 'Мексиканская',\n    structure: `Острый цыпленок, томатный соус, сладкий перец, красный лук, \n    моцарелла, острый перец халапеньо, томаты, соус сальса`,\n    image:\n      'https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/a1f7da39-debe-4a2e-bfc9-82d747f5aeec.jpg',\n    options: [\n      {\n        dough: 'Традиционное',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 200, isAvailable: true},\n          {id: nanoid(), size: 30, price: 300, isAvailable: true},\n          {id: nanoid(), size: 40, price: 400, isAvailable: true},\n          {id: nanoid(), size: 44, price: 1050, isAvailable: true},\n        ],\n      },\n      {\n        dough: 'Тонкое',\n        isAvailableDough: false,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 550, isAvailable: true},\n          {id: nanoid(), size: 30, price: 650, isAvailable: true},\n          {id: nanoid(), size: 40, price: 850, isAvailable: true},\n        ],\n      },\n    ],\n  },\n\n  {\n    typeId: nanoid(),\n    type: 'Вегетарианские',\n    isHot: false,\n    isVegan: true,\n    isNew: true,\n    title: 'Пицца-пирог',\n    structure: 'Ананасы, брусника, молоко сгущенное',\n    image:\n      'https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/acf387b2-273b-41ab-82c8-d648ae4793cd.jpg',\n    options: [\n      {\n        dough: 'Тонкое',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 350, isAvailable: true},\n          {id: nanoid(), size: 30, price: 550, isAvailable: true},\n        ],\n      },\n    ],\n  },\n];\n\nexport default pizzas;\n","import {combineReducers} from 'redux';\nimport {appState} from './app-state/app-state';\nimport {cartReducer} from './cart/cart';\nimport {data} from './data/data';\n\nexport const NameSpace = {\n  APP_STATE: 'APP_STATE',\n  DATA: 'DATA',\n  CART: 'CART',\n};\n\nexport default combineReducers({\n  [NameSpace.APP_STATE]: appState,\n  [NameSpace.DATA]: data,\n  [NameSpace.CART]: cartReducer,\n});\n","import {createSelector} from 'reselect';\n\nimport {NameSpace} from '../root-reducer';\n\nimport {getSumQuantityInCart, getSumPriceInCart} from '../../../utils/cart';\n\nexport const getCartSelector = (state) => state[NameSpace.CART].cart;\n\nexport const getSumQuantityInCartSelector = createSelector(getCartSelector, getSumQuantityInCart);\n\nexport const getSumPriceInCartSelector = createSelector(getCartSelector, getSumPriceInCart);\n","export const getSumQuantityInCart = (cart) => {\n  if (!cart) {\n    return 0;\n  }\n\n  const quantity = cart.reduce((acc, item) => item.quantity + acc, 0);\n  return quantity;\n};\n\nexport const getSumPriceInCart = (cart) => {\n  if (!cart) {\n    return 0;\n  }\n\n  const price = cart.reduce((acc, item) => {\n    return acc + item.price * item.quantity;\n  }, 0);\n  return price;\n};\n","import React, {memo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\n\nimport logo from '../../assets/img/pizza-logo.svg';\nimport {\n  getSumQuantityInCartSelector,\n  getSumPriceInCartSelector,\n} from '../../store/reducers/cart/selectors';\n\nimport './header.scss';\n\nconst Header = ({sumQuantityInCart, sumPriceInCart}) => {\n  return (\n    <header className=\"header\">\n      <div className=\"header__logo\">\n        <div className=\"header__img-wrapper\">\n          <img src={logo} width=\"38\" height=\"38\" alt=\"Логотип Реакт Пиццы\" />\n        </div>\n        <div className=\"header__logo-text\">\n          <h1 className=\"header__title\">React Pizza</h1>\n          <p className=\"header__subtitle\">самая вкусная пицца в мире</p>\n        </div>\n      </div>\n      <Link to=\"/cart\" className=\"header__order\">\n        <p className=\"header__price\">{sumPriceInCart} ₽</p>\n        <p className=\"header__quantity\">{sumQuantityInCart}</p>\n      </Link>\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  sumPriceInCart: PropTypes.number.isRequired,\n  sumQuantityInCart: PropTypes.number.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  sumQuantityInCart: getSumQuantityInCartSelector(state),\n  sumPriceInCart: getSumPriceInCartSelector(state),\n});\n\nexport default compose(connect(mapStateToProps), memo)(Header);\n","import {NameSpace} from '../root-reducer';\nimport {SortType} from '../../../consts';\n\nexport const getActiveSortTypeSelector = (state) => state[NameSpace.APP_STATE].activeSortType;\nexport const getSortMenuStatusSelector = (state) => state[NameSpace.APP_STATE].isSortMenuOpen;\nexport const getSortTypeSelector = () => SortType;\nexport const getActivePizzaTypeSelector = (state) => state[NameSpace.APP_STATE].activePizzaType;\n","import {SortType} from '../consts';\n\nexport const getTypesFilter = (pizzas) => {\n  const types = pizzas.map((pizza) => pizza.type).sort();\n  const uniqueTypes = ['Все', ...new Set(types)];\n\n  return uniqueTypes;\n};\n\nconst filterByAvailable = (pizza) => {\n  const {options} = pizza;\n  const filteredOptions = options\n    .filter((option) => option.isAvailableDough === true)\n    .map((option) => {\n      const filteredConditions = option.conditions.filter(({isAvailable}) => isAvailable === true);\n      return {...option, conditions: filteredConditions};\n    });\n\n  return {...pizza, options: filteredOptions};\n};\n\nexport const filterPizzas = (pizzas, activeType, activeSortType) => {\n  const filteredPizzasByDoughType = pizzas.filter((pizza) => {\n    if (pizza.type === activeType) {\n      return true;\n    }\n    if (activeType === 'Все') {\n      return true;\n    }\n\n    return false;\n  });\n\n  switch (activeSortType) {\n    case SortType.POPULAR:\n      return filteredPizzasByDoughType;\n\n    case SortType.PRICE:\n      return filteredPizzasByDoughType.slice().sort((a, b) => {\n        const onlyAvailableA = filterByAvailable(a);\n        const onlyAvailableB = filterByAvailable(b);\n\n        const priceA = onlyAvailableA.options[0].conditions[0].price;\n        const priceB = onlyAvailableB.options[0].conditions[0].price;\n\n        if (priceA > priceB) {\n          return 1;\n        }\n        if (priceA < priceB) {\n          return -1;\n        }\n        return 0;\n      });\n\n    case SortType.ALPHABET:\n      return filteredPizzasByDoughType.slice().sort((a, b) => {\n        if (a.title > b.title) {\n          return 1;\n        }\n        if (a.title < b.title) {\n          return -1;\n        }\n        return 0;\n      });\n    default:\n      return filteredPizzasByDoughType;\n  }\n};\n","import {createSelector} from 'reselect';\nimport {NameSpace} from '../root-reducer';\n\nimport {getTypesFilter, filterPizzas} from '../../../utils/filter';\nimport {getActivePizzaTypeSelector, getActiveSortTypeSelector} from '../app-state/selectors';\n\nexport const getPizzasSelector = (state) => state[NameSpace.DATA].pizzas;\n\nexport const getTypesFilterSelector = createSelector(getPizzasSelector, getTypesFilter);\n\nexport const getFilteredPizzasSelector = createSelector(\n  [getPizzasSelector, getActivePizzaTypeSelector, getActiveSortTypeSelector],\n  filterPizzas,\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport {AppStateActionCreator} from '../../store/reducers/app-state/app-state';\nimport {getActivePizzaTypeSelector} from '../../store/reducers/app-state/selectors';\nimport {getTypesFilterSelector} from '../../store/reducers/data/selectors';\n\nimport './nav.scss';\n\nconst Nav = ({onChangePizzaType, activePizzaType, typesFilter}) => {\n  const changePizzaTypeHandler = (evt) => {\n    if (evt.target.innerText === activePizzaType) {\n      return;\n    }\n\n    onChangePizzaType(evt.target.innerText);\n  };\n\n  return (\n    <nav className=\"section-pizza__nav nav\">\n      <ul className=\"nav__list\">\n        {typesFilter.map((type) => {\n          const classes = classNames('nav__item', {\n            'nav__item--active': type === activePizzaType,\n          });\n\n          return (\n            <li key={type} className={classes}>\n              <Link className=\"nav__link\" to=\"/\" onClick={changePizzaTypeHandler}>\n                {type}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  onChangePizzaType: PropTypes.func.isRequired,\n  activePizzaType: PropTypes.string.isRequired,\n  typesFilter: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  activePizzaType: getActivePizzaTypeSelector(state),\n  typesFilter: getTypesFilterSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangePizzaType: (type) => {\n    dispatch(AppStateActionCreator.changePizzaType(type));\n    dispatch(AppStateActionCreator.resetSortMenu());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","import React, {useCallback, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport {\n  getSortTypeSelector,\n  getActiveSortTypeSelector,\n  getSortMenuStatusSelector,\n} from '../../store/reducers/app-state/selectors';\nimport {AppStateActionCreator} from '../../store/reducers/app-state/app-state';\n\nimport './sorting.scss';\n\nconst Sorting = ({\n  isSortMenuOpen,\n  onToggledSortMenu,\n  sortType,\n  activeSortType,\n  onChageSortType,\n  onResetSortMenu,\n}) => {\n  const sortingRef = useRef(null);\n  const toggledSortMenuEnterHandler = (evt) => {\n    if (evt.code === 'Enter') {\n      onToggledSortMenu();\n    }\n  };\n\n  const clickOutsideHandler = useCallback(\n    (evt) => {\n      const path = evt.path || (evt.composedPath && evt.composedPath());\n      if (!path.includes(sortingRef.current)) {\n        onResetSortMenu();\n      }\n    },\n    [onResetSortMenu],\n  );\n\n  useEffect(() => {\n    document.body.addEventListener('click', clickOutsideHandler);\n\n    return () => {\n      document.body.removeEventListener('click', clickOutsideHandler);\n    };\n  }, [clickOutsideHandler, isSortMenuOpen]);\n  return (\n    <div ref={sortingRef} className=\"section-pizza__sorting sorting\">\n      <span className=\"sorting__caption\">Сортировка по:</span>\n      <span\n        onClick={onToggledSortMenu}\n        onKeyDown={toggledSortMenuEnterHandler}\n        className=\"sorting__type\"\n        tabIndex=\"0\"\n        role=\"button\"\n      >\n        {activeSortType}\n      </span>\n      {isSortMenuOpen && (\n        <ul className=\"sorting__options\">\n          {Object.values(sortType).map((type) => {\n            return (\n              <li\n                key={type}\n                className={classNames('sorting__option', {\n                  'sorting__option--active': activeSortType === type,\n                })}\n                tabIndex=\"-1\"\n              >\n                <Link className=\"sorting__link\" to=\"/\" onClick={() => onChageSortType(type)}>\n                  {type}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nSorting.propTypes = {\n  isSortMenuOpen: PropTypes.bool.isRequired,\n  onToggledSortMenu: PropTypes.func.isRequired,\n  sortType: PropTypes.object.isRequired,\n  activeSortType: PropTypes.string,\n  onChageSortType: PropTypes.func.isRequired,\n  onResetSortMenu: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isSortMenuOpen: getSortMenuStatusSelector(state),\n  activeSortType: getActiveSortTypeSelector(state),\n  sortType: getSortTypeSelector(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onToggledSortMenu: () => {\n    dispatch(AppStateActionCreator.toggledSortMenu());\n  },\n  onResetSortMenu: () => {\n    dispatch(AppStateActionCreator.resetSortMenu());\n  },\n  onChageSortType: (type) => {\n    dispatch(AppStateActionCreator.changeSortType(type));\n    dispatch(AppStateActionCreator.toggledSortMenu());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sorting);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport Nav from '../nav/nav';\nimport Sorting from '../sorting/sorting';\n\nimport {\n  getActivePizzaTypeSelector,\n  getActiveSortTypeSelector,\n  getSortTypeSelector,\n} from '../../store/reducers/app-state/selectors';\n\nimport {AppStateActionCreator} from '../../store/reducers/app-state/app-state';\n\nimport './section-pizza.scss';\nimport {sortTypesPropTypes} from '../../utils/prop-types';\n\nconst SectionPizza = ({activePizzaType, activeSortType, sortType, onResetFilters}) => {\n  const isShowResetBtn = activePizzaType !== 'Все' || activeSortType !== sortType.POPULAR;\n\n  return (\n    <section className=\"section-pizza\">\n      <h2 className=\"visually-hidden\">Выбрать вид пиццы</h2>\n      <div className=\"section-pizza__wrapper\">\n        <Nav />\n        <Sorting />\n      </div>\n      {isShowResetBtn && (\n        <button className=\"section-pizza__reset-btn\" type=\"button\" onClick={onResetFilters}>\n          Сбросить сортировку\n        </button>\n      )}\n    </section>\n  );\n};\n\nSectionPizza.propTypes = {\n  activePizzaType: PropTypes.string.isRequired,\n  activeSortType: sortTypesPropTypes,\n  sortType: PropTypes.object.isRequired,\n  onResetFilters: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  activePizzaType: getActivePizzaTypeSelector(state),\n  activeSortType: getActiveSortTypeSelector(state),\n  sortType: getSortTypeSelector(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onResetFilters: () => {\n    dispatch(AppStateActionCreator.resetFilters());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionPizza);\n","import PropTypes from 'prop-types';\nimport {SortType} from '../consts';\n\nexport const cartPropTypes = PropTypes.arrayOf(\n  PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    typeId: PropTypes.string.isRequired,\n    type: PropTypes.string,\n    title: PropTypes.string,\n    size: PropTypes.number.isRequired,\n    price: PropTypes.number.isRequired,\n    quantity: PropTypes.number.isRequired,\n  }),\n);\n\nexport const pizzaPropTypes = PropTypes.shape({\n  typeId: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isHot: PropTypes.bool.isRequired,\n  isVegan: PropTypes.bool.isRequired,\n  isNew: PropTypes.bool.isRequired,\n  structure: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      dough: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      conditions: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          size: PropTypes.number.isRequired,\n          price: PropTypes.number.isRequired,\n        }),\n      ),\n    }),\n  ),\n});\n\nexport const sortTypesPropTypes = PropTypes.oneOf([...Object.values(SortType)]).isRequired;\n","import React, {useState, memo, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport classNames from 'classnames';\n\nimport {CartActionCreator} from '../../store/reducers/cart/cart';\nimport {cartPropTypes, pizzaPropTypes} from '../../utils/prop-types';\n\nimport {\n  getDoughTypes,\n  getDefaultPizzaSize,\n  getAvailableMinSizeIndex,\n  getAvailableDoughIndex,\n} from '../../utils/pizza';\n\nimport {getCartSelector} from '../../store/reducers/cart/selectors';\n\nimport './pizza-card.scss';\n\nconst PizzaCard = ({pizza, onAddToCart, cart, onChangeQuantityToCart}) => {\n  const {typeId, title, type, image, options, isHot, isVegan, isNew, structure} = pizza;\n  const doughTypes = getDoughTypes(pizza);\n  const [activeDough, setActiveDough] = useState(doughTypes[0]);\n\n  const {conditions} = options.find((option) => option.dough === activeDough);\n  const defaultSize = getDefaultPizzaSize(conditions);\n  const [activeSize, setActiveSize] = useState(defaultSize);\n  const {price, id} = conditions.find((condition) => condition.size === activeSize) || {\n    price: 0,\n    id: 0,\n  };\n  const [quantity, setQuantity] = useState(0);\n\n  const formSubmitHandler = (evt) => {\n    evt.preventDefault();\n\n    const newPizza = {\n      id,\n      typeId,\n      type,\n      title,\n      size: activeSize,\n      price,\n      quantity: 1,\n    };\n\n    const index = cart.findIndex((item) => item.id === id);\n\n    if (index === -1) {\n      onAddToCart(newPizza);\n    } else {\n      onChangeQuantityToCart(newPizza);\n    }\n\n    setQuantity((prev) => prev + 1);\n  };\n\n  useEffect(() => {\n    setActiveSize(defaultSize);\n  }, [activeDough, defaultSize]);\n\n  const [isShownPopup, setIsShownPopup] = useState(false);\n\n  const enablePopupHandler = () => {\n    setIsShownPopup(true);\n  };\n\n  const disablePopupHandler = () => {\n    setIsShownPopup(false);\n  };\n\n  const imageRef = useRef(null);\n\n  useEffect(() => {\n    const {current} = imageRef;\n    current.addEventListener('mouseover', enablePopupHandler);\n    current.addEventListener('mouseout', disablePopupHandler);\n\n    return () => {\n      current.removeEventListener('mouseover', enablePopupHandler);\n      current.removeEventListener('mouseout', disablePopupHandler);\n    };\n  }, []);\n\n  const availableMinSizeIndex = getAvailableMinSizeIndex(conditions);\n  const availableDoughIndex = getAvailableDoughIndex(options);\n\n  const classNamesCard = classNames('pizza-list__item pizza-card', {\n    'pizza-card--new': isNew,\n    'pizza-card--popup-active': isShownPopup,\n  });\n\n  const classNameTitle = classNames('pizza-card__title', {\n    'pizza-card__title--hot': isHot,\n    'pizza-card__title--vegan': isVegan,\n  });\n\n  return (\n    <article className={classNamesCard}>\n      <div ref={imageRef} className=\"pizza-card__img-wrapper\">\n        <img src={image} width=\"260\" height=\"260\" alt={`Пицца ${title}`} />\n      </div>\n      <h3 className={classNameTitle}>{title}</h3>\n      <form onSubmit={formSubmitHandler} className=\"pizza-card__form\" method=\"#\">\n        <div className=\"pizza-card__controls\">\n          <fieldset className=\"pizza-card__field\">\n            <legend className=\"visually-hidden\">Вид теста</legend>\n\n            {options.map(({dough, id: idDough, isAvailableDough}, index) => {\n              const isDefaultChecked = index === availableDoughIndex;\n\n              return (\n                <p key={`${dough}-${idDough}`} className=\"pizza-card__input-wrapper\">\n                  <input\n                    onChange={() => setActiveDough(dough)}\n                    className=\"pizza-card__input visually-hidden\"\n                    type=\"radio\"\n                    id={idDough}\n                    name=\"dough\"\n                    value={idDough}\n                    defaultChecked={isDefaultChecked}\n                    disabled={!isAvailableDough}\n                  />\n                  <label className=\"pizza-card__label\" htmlFor={idDough}>\n                    {dough}\n                  </label>\n                </p>\n              );\n            })}\n          </fieldset>\n          <fieldset className=\"pizza-card__field\">\n            <legend className=\"visually-hidden\">Размер пиццы</legend>\n            {conditions.map(({size, isAvailable}, index) => {\n              const isDefaultChecked = index === availableMinSizeIndex;\n\n              return (\n                <p key={`${typeId}-${activeDough}-${size}`} className=\"pizza-card__input-wrapper\">\n                  <input\n                    onChange={() => {\n                      setActiveSize(size);\n                    }}\n                    className=\"pizza-card__input visually-hidden\"\n                    id={`${typeId}-${activeDough}-${size}`}\n                    type=\"radio\"\n                    name=\"size\"\n                    value={size}\n                    defaultChecked={isDefaultChecked}\n                    disabled={!isAvailable}\n                  />\n                  <label className=\"pizza-card__label\" htmlFor={`${typeId}-${activeDough}-${size}`}>\n                    {`${size} см.`}\n                  </label>\n                </p>\n              );\n            })}\n          </fieldset>\n        </div>\n\n        <div className=\"pizza-card__bottom\">\n          <p className=\"pizza-card__price\">от {price} Р</p>\n          <button className=\"pizza-card__button\" type=\"submit\">\n            <svg className=\"pizza-card__plus\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\">\n              <path\n                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001\n                9.6C4.42985 9.6 4.00001 9.17016 4.00001\n                8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001\n                0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n                fill=\"currentColor\"\n              />\n              <path\n                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977\n                5.92001C0.429817 5.92001 -2.29533e-05 5.49017\n                -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817\n                4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998\n                4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998\n                5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n            <span className=\"pizza-card__button-text\">Добавить</span>\n            <span className=\"pizza-card__quantity\">{quantity}</span>\n          </button>\n        </div>\n      </form>\n      {isShownPopup && (\n        <div className=\"pizza-card__popup-info\">\n          <p className=\"pizza-card__structure\">Состав: {structure.toLowerCase()}</p>\n        </div>\n      )}\n    </article>\n  );\n};\n\nPizzaCard.propTypes = {\n  cart: cartPropTypes,\n  pizza: pizzaPropTypes,\n  onAddToCart: PropTypes.func.isRequired,\n  onChangeQuantityToCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  cart: getCartSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAddToCart: (pizza) => {\n    dispatch(CartActionCreator.addToCart(pizza));\n  },\n  onChangeQuantityToCart: (pizza) => {\n    dispatch(CartActionCreator.changeQuantityToCart(pizza));\n  },\n});\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), memo)(PizzaCard);\n","export const getDoughTypes = (pizza) => {\n  const doughTypes = pizza.options\n    .filter(({isAvailableDough}) => isAvailableDough === true)\n    .map((option) => option.dough);\n\n  return doughTypes;\n};\n\nexport const getAvailableConditions = (conditions) => {\n  const isAvailableConditions = conditions.filter(({isAvailable}) => isAvailable === true);\n  return isAvailableConditions;\n};\n\nexport const getDefaultPizzaSize = (conditions) => {\n  const isAvailableConditions = getAvailableConditions(conditions);\n  const sizes = isAvailableConditions.map((condition) => condition.size);\n  const minSize = Math.min(...sizes);\n  return minSize;\n};\n\nexport const getAvailableMinSizeIndex = (conditions) => {\n  const indexes = conditions.map(({isAvailable}, index) => {\n    if (isAvailable) {\n      return index;\n    }\n\n    return 999;\n  });\n\n  const minIndex = Math.min(...indexes);\n\n  return minIndex;\n};\n\nexport const getAvailableDoughIndex = (options) => {\n  const indexes = options.map(({isAvailableDough}, index) => {\n    if (isAvailableDough) {\n      return index;\n    }\n\n    return 999;\n  });\n\n  const minIndex = Math.min(...indexes);\n\n  return minIndex;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport PizzaCard from '../pizza-card/pizza-card';\n\nimport {pizzaPropTypes} from '../../utils/prop-types';\n\nimport {getActivePizzaTypeSelector} from '../../store/reducers/app-state/selectors';\nimport {getFilteredPizzasSelector} from '../../store/reducers/data/selectors';\n\nimport './pizza-list.scss';\n\nconst PizzaList = ({activePizzaType, filteredPizzas}) => {\n  return (\n    <section className=\"pizza-list\">\n      <h2 className=\"pizza-list__title\">{activePizzaType} пиццы</h2>\n      <ul className=\"pizza-list__list\">\n        {filteredPizzas.map((pizza) => {\n          return (\n            <li key={pizza.typeId} className=\"pizza-list__item\">\n              <PizzaCard pizza={pizza} />\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nPizzaList.propTypes = {\n  activePizzaType: PropTypes.string.isRequired,\n  filteredPizzas: PropTypes.arrayOf(PropTypes.shape({pizzaPropTypes})),\n};\n\nconst mapStateToProps = (state) => ({\n  activePizzaType: getActivePizzaTypeSelector(state),\n  filteredPizzas: getFilteredPizzasSelector(state),\n});\n\nexport default connect(mapStateToProps)(PizzaList);\n","import React from 'react';\n\nimport './footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer className=\"page__footer footer\">\n      <div className=\"footer__copyright\">\n        <p className=\"footer__label\">\n          Design by:{' '}\n          <a className=\"footer__link\" href=\"https://archakov.im/\" target=\"_blank\" rel=\"noreferrer\">\n            Archakov Blog\n          </a>\n        </p>\n        <p className=\"footer__label\">\n          Developed by:{' '}\n          <a\n            className=\"footer__link\"\n            href=\"https://github.com/maxorrs\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Max Strokov\n          </a>\n        </p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from '../../header/header';\nimport SectionPizza from '../../section-pizza/section-pizza';\nimport PizzaList from '../../pizza-list/pizza-list';\n\nimport './main-page.scss';\nimport Footer from '../../footer/footer';\n\nconst MainPage = () => {\n  return (\n    <div className=\"page page--yellow page--main\">\n      <Header />\n      <main>\n        <SectionPizza />\n        <PizzaList />\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\n\nconst CartPage = () => {\n  return <h1>CART PAGE</h1>;\n};\n\nexport default CartPage;\n","import React from 'react';\nimport {Switch, Route, BrowserRouter} from 'react-router-dom';\n\nimport MainPage from '../pages/main-page/main-page';\nimport CartPage from '../pages/cart-page/cart-page';\n\nimport '../../scss/style.scss';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\">\n          <MainPage />\n        </Route>\n        <Route exact path=\"/cart\">\n          <CartPage />\n        </Route>\n        <Route>\n          <h1>404</h1>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport App from './components/app/app';\nimport rootReducer from './store/reducers/root-reducer';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}