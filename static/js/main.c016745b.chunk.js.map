{"version":3,"sources":["assets/img/pizza-logo.svg","consts.js","store/reducers/app-state/app-state.js","store/reducers/cart/cart.js","store/reducers/data/data.js","mocks/pizzas.js","store/reducers/root-reducer.js","store/reducers/cart/selectors.js","utils/cart.js","components/header/header.jsx","store/reducers/app-state/selectors.js","utils/filter.js","store/reducers/data/selectors.js","components/nav/nav.jsx","components/sorting/sorting.jsx","utils/prop-types.js","components/section-pizza/section-pizza.jsx","components/pizza-card/pizza-card.jsx","utils/pizza.js","components/pizza-list/pizza-list.jsx","components/footer/footer.jsx","components/pages/main-page/main-page.jsx","components/pizza-cart/pizza-cart.jsx","components/cart-list/cart-list.jsx","components/cart/cart.jsx","components/cart-empty/cart-empty.jsx","components/pages/cart-page/cart-page.jsx","components/app/app.jsx","index.js"],"names":["SortType","POPULAR","PRICE","ALPHABET","SORT_TYPE_DEFAULT","PIZZA_TYPE_DEFAULT","initialState","isSortMenuOpen","activeSortType","activePizzaType","cart","AppStateActionType","AppStateActionCreator","type","payload","CartActionType","CartActionCreator","pizzas","typeId","nanoid","isHot","isVegan","isNew","title","structure","image","options","dough","isAvailableDough","id","conditions","size","price","isAvailable","DataActionType","NameSpace","combineReducers","state","action","produce","draft","push","pizza","map","item","quantity","idForDelete","filter","idForInc","idForDec","index","splice","getCartSelector","getSumQuantityInCartSelector","createSelector","reduce","acc","getSumPriceInCartSelector","Header","sumQuantityInCart","sumPriceInCart","isMainPage","className","to","src","logo","width","height","alt","defaultProps","compose","connect","memo","getActiveSortTypeSelector","getSortMenuStatusSelector","getSortTypeSelector","getActivePizzaTypeSelector","filterByAvailable","filteredOptions","option","filteredConditions","getPizzasSelector","getTypesFilterSelector","types","sort","Set","getFilteredPizzasSelector","activeType","filteredPizzasByDoughType","slice","a","b","onlyAvailableA","onlyAvailableB","priceA","priceB","typesFilter","dispatch","onChangePizzaType","changePizzaTypeHandler","evt","target","innerText","classes","classNames","onClick","sortType","onToggledSortMenu","onResetSortMenu","onChageSortType","sortingRef","useRef","clickOutsideHandler","useCallback","path","composedPath","includes","current","useEffect","document","body","addEventListener","removeEventListener","ref","onKeyDown","code","tabIndex","role","Object","values","pizzaCartPropTypes","PropTypes","shape","string","isRequired","number","arrayOf","bool","oneOf","onResetFilters","isShowResetBtn","onAddToCart","onIncQuantity","doughTypes","getDoughTypes","useState","activeDough","setActiveDough","find","defaultSize","sizes","getAvailableConditions","condition","Math","min","getDefaultPizzaSize","activeSize","setActiveSize","setQuantity","isShownPopup","setIsShownPopup","enablePopupHandler","disablePopupHandler","imageRef","availableMinSizeIndex","indexes","getAvailableMinSizeIndex","availableDoughIndex","getAvailableDoughIndex","classNamesCard","classNameTitle","onSubmit","preventDefault","newPizza","findIndex","prev","method","idDough","isDefaultChecked","onChange","name","value","defaultChecked","disabled","htmlFor","viewBox","d","fill","toLowerCase","filteredPizzas","Footer","href","rel","MainPage","onDeleteItem","onDecQuantity","sumPrice","onClearCart","CartEmpty","isEmptyCart","length","App","exact","basename","process","store","createStore","rootReducer","composeWithDevTools","ReactDOM","render","StrictMode","getElementById"],"mappings":"kfAAe,MAA0B,uC,uBCA5BA,EAAW,CACtBC,QAAS,2EACTC,MAAO,2BACPC,SAAU,oDAGCC,EAAoBJ,EAASC,QAE7BI,EAAqB,qBCN5BC,EAAe,CACnBC,gBAAgB,EAChBC,eAAgBJ,EAChBK,gBAAiBJ,EACjBK,KAAM,IAGKC,EACO,mBADPA,EAEO,mBAFPA,EAGQ,oBAHRA,EAIM,kBAJNA,EAMI,gBAGJC,EACM,iBAAO,CACtBC,KAAMF,IAFGC,EAIK,SAACE,GAAD,MAAc,CAC5BD,KAAMF,EACNG,YANSF,EAQM,SAACE,GAAD,MAAc,CAC7BD,KAAMF,EACNG,YAVSF,EAYI,iBAAO,CACpBC,KAAMF,IAbGC,EAeG,iBAAO,CACnBC,KAAMF,I,QChCJL,EAAe,CACnBI,KAAM,IAGKK,EACE,cADFA,EAEM,kBAFNA,EAGC,aAHDA,EAIE,cAJFA,EAKG,eALHA,EAMG,eAGHC,EACA,SAACF,GAAD,MAAc,CACvBD,KAAME,EACND,YAHSE,EASA,iBAAO,CAChBH,KAAME,IAVGC,EAYC,SAACF,GAAD,MAAc,CACxBD,KAAME,EACND,YAdSE,EAgBE,SAACF,GAAD,MAAc,CACzBD,KAAME,EACND,YAlBSE,EAoBE,SAACF,GAAD,MAAc,CACzBD,KAAME,EACND,Y,OCnCER,EAAe,CACnBW,OCDa,CACb,CACEC,OAAQC,cACRN,KAAM,uCACNO,OAAO,EACPC,SAAS,EACTC,OAAO,EACPC,MAAO,wFACPC,UACE,gbACFC,MACE,qGACFC,QAAS,CACP,CACEC,MAAO,2EACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,KAGtD,CACEN,MAAO,uCACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,OAM1D,CACEf,OAAQC,cACRN,KAAM,uFACNO,OAAO,EACPC,SAAS,EACTC,OAAO,EACPC,MAAO,uCACPC,UAAW,4OACXC,MACE,4GACFC,QAAS,CACP,CACEC,MAAO,2EACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,KAGtD,CACEN,MAAO,uCACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,KAGtD,CACEN,MAAO,6CACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,KAAMC,aAAa,OAM3D,CACEf,OAAQC,cACRN,KAAM,uCACNO,OAAO,EACPC,SAAS,EACTC,OAAO,EACPC,MAAO,2EACPC,UAAU,4kBAEVC,MACE,4GACFC,QAAS,CACP,CACEC,MAAO,2EACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,KAAMC,aAAa,KAGvD,CACEN,MAAO,uCACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,OAM1D,CACEf,OAAQC,cACRN,KAAM,uFACNO,OAAO,EACPC,SAAS,EACTC,OAAO,EACPC,MAAO,gEACPC,UAAW,4LACXC,MACE,4GACFC,QAAS,CACP,CACEC,MAAO,uCACPC,kBAAkB,EAClBC,GAAIV,cACJW,WAAY,CACV,CAACD,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,GAClD,CAACJ,GAAIV,cAAUY,KAAM,GAAIC,MAAO,IAAKC,aAAa,SDjI/CC,EACE,cEFFC,EACA,YADAA,EAEL,OAFKA,EAGL,OAGOC,6BAAe,mBAC3BD,GJ0BqB,WAAmC,IAAlCE,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCACxD,OAAQA,EAAOzB,MACb,KAAKF,EACH,OAAO,2BAAI0B,GAAX,IAAkB9B,gBAAiB8B,EAAM9B,iBAE3C,KAAKI,EACH,OAAO,2BAAI0B,GAAX,IAAkB7B,eAAgB8B,EAAOxB,UAE3C,KAAKH,EACH,OAAO,2BAAI0B,GAAX,IAAkB5B,gBAAiB6B,EAAOxB,UAE5C,KAAKH,EACH,OAAO,2BAAI0B,GAAX,IAAkB9B,gBAAgB,IAEpC,KAAKI,EACH,OAAO,2BACF0B,GADL,IAEE9B,gBAAgB,EAChBE,gBAAiBJ,EACjBG,eAAgBJ,IAGpB,QACE,OAAOiC,MIlDiB,cAE3BF,GFIiB,WAAmC,IAAlCE,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCACpD,OAAQA,EAAOzB,MACb,KAAKqB,EACH,OAAO,2BAAIG,GAAX,IAAkBpB,OAAQqB,EAAOxB,UAEnC,QACE,OAAOuB,MEZiB,cAG3BF,GH2BwB,WAAmC,IAAlCE,EAAiC,uDAAzB/B,EAAcgC,EAAW,uCAC3D,OAAOC,YAAQF,GAAO,SAACG,GAKrB,GAJIF,EAAOzB,OAASE,GAClByB,EAAM9B,KAAK+B,KAAKH,EAAOxB,SAGrBwB,EAAOzB,OAASE,EAAgC,CAClD,IAAM2B,EAAQJ,EAAOxB,QAErB0B,EAAM9B,KAAKiC,KAAI,SAACC,GACd,OAAIA,EAAKf,KAAOa,EAAMb,IACpBe,EAAKC,UAAY,EACVD,GAGFA,KAQX,GAJIN,EAAOzB,OAASE,IAClByB,EAAM9B,KAAO,IAGX4B,EAAOzB,OAASE,EAA4B,CAC9C,IAAM+B,EAAcR,EAAOxB,QAC3B0B,EAAM9B,KAAO8B,EAAM9B,KAAKqC,QAAO,SAACH,GAAD,OAAUA,EAAKf,KAAOiB,KAGvD,GAAIR,EAAOzB,OAASE,EAA6B,CAC/C,IAAMiC,EAAWV,EAAOxB,QACxB0B,EAAM9B,KAAKiC,KAAI,SAACC,GACd,OAAIA,EAAKf,KAAOmB,GACdJ,EAAKC,UAAY,EACVD,GAGFA,KAIX,GAAIN,EAAOzB,OAASE,EAA6B,CAC/C,IAAMkC,EAAWX,EAAOxB,QAExB0B,EAAM9B,KAAKiC,KAAI,SAACC,EAAMM,GACpB,OAAIN,EAAKf,KAAOoB,EACQ,IAAlBL,EAAKC,SACAL,EAAM9B,KAAKyC,OAAOD,EAAO,IAGlCN,EAAKC,UAAY,EACVD,GAGFA,YGnFe,ICLjBQ,EAAkB,SAACf,GAAD,OAAWA,EAAMF,GAAgBzB,MAEnD2C,EAA+BC,YAAeF,GCRvB,SAAC1C,GACnC,OAAKA,EAIYA,EAAK6C,QAAO,SAACC,EAAKZ,GAAN,OAAeA,EAAKC,SAAWW,IAAK,GAHxD,KDQEC,GAA4BH,YAAeF,GCDvB,SAAC1C,GAChC,OAAKA,EAISA,EAAK6C,QAAO,SAACC,EAAKZ,GAC9B,OAAOY,EAAMZ,EAAKZ,MAAQY,EAAKC,WAC9B,GALM,KCGLa,I,MAAS,SAAC,GAAqD,IAApDC,EAAmD,EAAnDA,kBAAmBC,EAAgC,EAAhCA,eAAgBC,EAAgB,EAAhBA,WAClD,OACE,yBAAQC,UAAU,SAAlB,UACE,eAAC,IAAD,CAAMC,GAAG,IAAID,UAAU,eAAvB,UACE,qBAAKA,UAAU,sBAAf,SACE,qBAAKE,IAAKC,EAAMC,MAAM,KAAKC,OAAO,KAAKC,IAAI,+GAE7C,sBAAKN,UAAU,oBAAf,UACE,oBAAIA,UAAU,gBAAd,yBACA,mBAAGA,UAAU,mBAAb,4JAGHD,GACC,eAAC,IAAD,CAAME,GAAG,QAAQD,UAAU,gBAA3B,UACE,oBAAGA,UAAU,gBAAb,UAA8BF,EAA9B,aACA,mBAAGE,UAAU,mBAAb,SAAiCH,YAa3CD,GAAOW,aAAe,CACpBR,YAAY,GAGd,IAKeS,qBAAQC,aALC,SAAClC,GAAD,MAAY,CAClCsB,kBAAmBN,EAA6BhB,GAChDuB,eAAgBH,GAA0BpB,OAGKmC,OAAlCF,CAAwCZ,I,oBChD1Ce,GAA4B,SAACpC,GAAD,OAAWA,EAAMF,GAAqB3B,gBAClEkE,GAA4B,SAACrC,GAAD,OAAWA,EAAMF,GAAqB5B,gBAClEoE,GAAsB,kBAAM3E,GAC5B4E,GAA6B,SAACvC,GAAD,OAAWA,EAAMF,GAAqB1B,iB,SCG1EoE,GAAoB,SAACnC,GAAW,IAE9BoC,EADYpC,EAAXhB,QAEJqB,QAAO,SAACgC,GAAD,OAAwC,IAA5BA,EAAOnD,oBAC1Be,KAAI,SAACoC,GACJ,IAAMC,EAAqBD,EAAOjD,WAAWiB,QAAO,mBAAmC,IAAnC,EAAEd,eACtD,OAAO,2BAAI8C,GAAX,IAAmBjD,WAAYkD,OAGnC,OAAO,2BAAItC,GAAX,IAAkBhB,QAASoD,KCZhBG,GAAoB,SAAC5C,GAAD,OAAWA,EAAMF,GAAgBlB,QAErDiE,GAAyB5B,YAAe2B,IDNvB,SAAChE,GAC7B,IAAMkE,EAAQlE,EAAO0B,KAAI,SAACD,GAAD,OAAWA,EAAM7B,QAAMuE,OAGhD,MAFiB,CAAI,sBAAJ,oBAAc,IAAIC,IAAIF,QCM5BG,GAA4BhC,YACvC,CAAC2B,GAAmBL,GAA4BH,KDUtB,SAACxD,EAAQsE,EAAY/E,GAC/C,IAAMgF,EAA4BvE,EAAO8B,QAAO,SAACL,GAC/C,OAAIA,EAAM7B,OAAS0E,GAGA,uBAAfA,KAON,OAAQ/E,GACN,KAAKR,EAASC,QACZ,OAAOuF,EAET,KAAKxF,EAASE,MACZ,OAAOsF,EAA0BC,QAAQL,MAAK,SAACM,EAAGC,GAChD,IAAMC,EAAiBf,GAAkBa,GACnCG,EAAiBhB,GAAkBc,GAEnCG,EAASF,EAAelE,QAAQ,GAAGI,WAAW,GAAGE,MACjD+D,EAASF,EAAenE,QAAQ,GAAGI,WAAW,GAAGE,MAEvD,OAAI8D,EAASC,EACJ,EAELD,EAASC,GACH,EAEH,KAGX,KAAK/F,EAASG,SACZ,OAAOqF,EAA0BC,QAAQL,MAAK,SAACM,EAAGC,GAChD,OAAID,EAAEnE,MAAQoE,EAAEpE,MACP,EAELmE,EAAEnE,MAAQoE,EAAEpE,OACN,EAEH,KAEX,QACE,OAAOiE,MELEjB,I,MAAAA,aAZS,SAAClC,GAAD,MAAY,CAClC5B,gBAAiBmE,GAA2BvC,GAC5C2D,YAAad,GAAuB7C,OAGX,SAAC4D,GAAD,MAAe,CACxCC,kBAAmB,SAACrF,GAClBoF,EAASrF,EAAsCC,IAC/CoF,EAASrF,SAIE2D,EAhDH,SAAC,GAAuD,IAAtD2B,EAAqD,EAArDA,kBAAmBzF,EAAkC,EAAlCA,gBAAiBuF,EAAiB,EAAjBA,YAC1CG,EAAyB,SAACC,GAC1BA,EAAIC,OAAOC,YAAc7F,GAI7ByF,EAAkBE,EAAIC,OAAOC,YAG/B,OACE,qBAAKxC,UAAU,yBAAf,SACE,oBAAIA,UAAU,YAAd,SACGkC,EAAYrD,KAAI,SAAC9B,GAChB,IAAM0F,EAAUC,KAAW,YAAa,CACtC,oBAAqB3F,IAASJ,IAGhC,OACE,oBAAeqD,UAAWyC,EAA1B,SACE,cAAC,IAAD,CAAMzC,UAAU,YAAYC,GAAG,IAAI0C,QAASN,EAA5C,SACGtF,KAFIA,cCgFN0D,I,MAAAA,aAnBS,SAAClC,GAAD,MAAY,CAClC9B,eAAgBmE,GAA0BrC,GAC1C7B,eAAgBiE,GAA0BpC,GAC1CqE,SAAU/B,SAGe,SAACsB,GAAD,MAAe,CACxCU,kBAAmB,WACjBV,EAASrF,MAEXgG,gBAAiB,WACfX,EAASrF,MAEXiG,gBAAiB,SAAChG,GAChBoF,EAASrF,EAAqCC,IAC9CoF,EAASrF,SAIE2D,EA/FC,SAAC,GAOV,IANLhE,EAMI,EANJA,eACAoG,EAKI,EALJA,kBACAD,EAII,EAJJA,SACAlG,EAGI,EAHJA,eACAqG,EAEI,EAFJA,gBACAD,EACI,EADJA,gBAEME,EAAaC,iBAAO,MAOpBC,EAAsBC,uBAC1B,SAACb,IACcA,EAAIc,MAASd,EAAIe,cAAgBf,EAAIe,gBACxCC,SAASN,EAAWO,UAC5BT,MAGJ,CAACA,IAUH,OAPAU,qBAAU,WAGR,OAFAC,SAASC,KAAKC,iBAAiB,QAAST,GAEjC,WACLO,SAASC,KAAKE,oBAAoB,QAASV,MAE5C,CAACA,EAAqBzG,IAEvB,sBAAKoH,IAAKb,EAAYhD,UAAU,iCAAhC,UACE,sBAAMA,UAAU,mBAAhB,wFACA,sBACE2C,QAASE,EACTiB,UA5B8B,SAACxB,GAClB,UAAbA,EAAIyB,MACNlB,KA2BE7C,UAAU,gBACVgE,SAAS,IACTC,KAAK,SALP,SAOGvH,IAEFD,GACC,oBAAIuD,UAAU,mBAAd,SACGkE,OAAOC,OAAOvB,GAAU/D,KAAI,SAAC9B,GAC5B,OACE,oBAEEiD,UAAW0C,KAAW,kBAAmB,CACvC,0BAA2BhG,IAAmBK,IAEhDiH,SAAS,KALX,SAOE,cAAC,IAAD,CAAMhE,UAAU,gBAAgBC,GAAG,IAAI0C,QAAS,kBAAMI,EAAgBhG,IAAtE,SACGA,KAPEA,e,2BC7DRqH,GAAqBC,KAAUC,MAAM,CAChDvG,GAAIsG,KAAUE,OAAOC,WACrBpH,OAAQiH,KAAUE,OAAOC,WACzBzH,KAAMsH,KAAUE,OAChB9G,MAAO4G,KAAUE,OACjBtG,KAAMoG,KAAUI,OAAOD,WACvBtG,MAAOmG,KAAUI,OAAOD,WACxBzF,SAAUsF,KAAUI,OAAOD,WAC3B7G,MAAO0G,KAAUE,OAAOC,WACxB3G,MAAOwG,KAAUE,OAAOC,aC4CX/D,IDzCc4D,KAAUK,QAAQN,IAEjBC,KAAUC,MAAM,CAC5ClH,OAAQiH,KAAUE,OAAOC,WACzBzH,KAAMsH,KAAUE,OAAOC,WACvB/G,MAAO4G,KAAUE,OAAOC,WACxB7G,MAAO0G,KAAUE,OAAOC,WACxBlH,MAAO+G,KAAUM,KAAKH,WACtBjH,QAAS8G,KAAUM,KAAKH,WACxBhH,MAAO6G,KAAUM,KAAKH,WACtB9G,UAAW2G,KAAUE,OAAOC,WAC5B5G,QAASyG,KAAUK,QACjBL,KAAUC,MAAM,CACdzG,MAAOwG,KAAUE,OAAOC,WACxBzG,GAAIsG,KAAUE,OAAOC,WACrBxG,WAAYqG,KAAUK,QACpBL,KAAUC,MAAM,CACdvG,GAAIsG,KAAUE,OAAOC,WACrBvG,KAAMoG,KAAUI,OAAOD,WACvBtG,MAAOmG,KAAUI,OAAOD,mBAOAH,KAAUO,MAAV,aAAoBV,OAAOC,OAAOjI,KAAYsI,WCejE/D,aAZS,SAAClC,GAAD,MAAY,CAClC5B,gBAAiBmE,GAA2BvC,GAC5C7B,eAAgBiE,GAA0BpC,GAC1CqE,SAAU/B,SAGe,SAACsB,GAAD,MAAe,CACxC0C,eAAgB,WACd1C,EAASrF,SAIE2D,EAtCM,SAAC,GAAiE,IAAhE9D,EAA+D,EAA/DA,gBAAiBD,EAA8C,EAA9CA,eAAgBkG,EAA8B,EAA9BA,SAAUiC,EAAoB,EAApBA,eAC1DC,EAAqC,uBAApBnI,GAA6BD,IAAmBkG,EAASzG,QAEhF,OACE,0BAAS6D,UAAU,gBAAnB,UACE,oBAAIA,UAAU,kBAAd,0GACA,sBAAKA,UAAU,yBAAf,UACE,cAAC,GAAD,IACA,cAAC,GAAD,OAED8E,GACC,wBAAQ9E,UAAU,2BAA2BjD,KAAK,SAAS4F,QAASkC,EAApE,kI,SC2LOrE,I,MAAAA,kBAAQC,aAbC,SAAClC,GAAD,MAAY,CAClC3B,KAAM0C,EAAgBf,OAGG,SAAC4D,GAAD,MAAe,CACxC4C,YAAa,SAACnG,GACZuD,EAASjF,EAA4B0B,KAEvCoG,cAAe,SAACjH,GACdoE,EAASjF,EAA8Ba,SAI0B2C,OAAtDF,EApMG,SAAC,GAA+C,IAA9C5B,EAA6C,EAA7CA,MAAOmG,EAAsC,EAAtCA,YAAanI,EAAyB,EAAzBA,KAAMoI,EAAmB,EAAnBA,cACrC5H,EAAyEwB,EAAzExB,OAAQK,EAAiEmB,EAAjEnB,MAAOV,EAA0D6B,EAA1D7B,KAAMY,EAAoDiB,EAApDjB,MAAOC,EAA6CgB,EAA7ChB,QAASN,EAAoCsB,EAApCtB,MAAOC,EAA6BqB,EAA7BrB,QAASC,EAAoBoB,EAApBpB,MAAOE,EAAakB,EAAblB,UAC7DuH,ECtBqB,SAACrG,GAK5B,OAJmBA,EAAMhB,QACtBqB,QAAO,mBAA6C,IAA7C,EAAEnB,oBACTe,KAAI,SAACoC,GAAD,OAAYA,EAAOpD,SDmBPqH,CAActG,GAF8B,EAGzBuG,mBAASF,EAAW,IAHK,oBAGxDG,EAHwD,KAG3CC,EAH2C,KAKxDrH,EAAcJ,EAAQ0H,MAAK,SAACrE,GAAD,OAAYA,EAAOpD,QAAUuH,KAAxDpH,WACDuH,ECb2B,SAACvH,GAClC,IACMwH,EAP8B,SAACxH,GAErC,OAD8BA,EAAWiB,QAAO,mBAAmC,IAAnC,EAAEd,eAKpBsH,CAAuBzH,GACjBa,KAAI,SAAC6G,GAAD,OAAeA,EAAUzH,QAEjE,OADgB0H,KAAKC,IAAL,MAAAD,KAAI,aAAQH,IDURK,CAAoB7H,GANuB,EAO3BmH,mBAASI,GAPkB,oBAOxDO,EAPwD,KAO5CC,EAP4C,OAQ3C/H,EAAWsH,MAAK,SAACI,GAAD,OAAeA,EAAUzH,OAAS6H,MAAe,CACnF5H,MAAO,EACPH,GAAI,GAFCG,EARwD,EAQxDA,MAAOH,EARiD,EAQjDA,GARiD,EAY/BoH,mBAAS,GAZsB,oBAYxDpG,EAZwD,KAY9CiH,EAZ8C,KAwC/DxC,qBAAU,WACRuC,EAAcR,KACb,CAACH,EAAaG,IA1C8C,MA4CvBJ,oBAAS,GA5Cc,oBA4CxDc,EA5CwD,KA4C1CC,EA5C0C,KA8CzDC,EAAqB,WACzBD,GAAgB,IAGZE,EAAsB,WAC1BF,GAAgB,IAGZG,EAAWpD,iBAAO,MAExBO,qBAAU,WAAO,IACRD,EAAW8C,EAAX9C,QAIP,OAHAA,EAAQI,iBAAiB,YAAawC,GACtC5C,EAAQI,iBAAiB,WAAYyC,GAE9B,WACL7C,EAAQK,oBAAoB,YAAauC,GACzC5C,EAAQK,oBAAoB,WAAYwC,MAEzC,IAEH,IAAME,ECnEgC,SAACtI,GACvC,IAAMuI,EAAUvI,EAAWa,KAAI,WAAgBO,GAC7C,OADuD,EAAxBjB,YAEtBiB,EAGF,OAKT,OAFiBuG,KAAKC,IAAL,MAAAD,KAAI,aAAQY,ID0DCC,CAAyBxI,GACjDyI,ECtD8B,SAAC7I,GACrC,IAAM2I,EAAU3I,EAAQiB,KAAI,WAAqBO,GAC/C,OADyD,EAA7BtB,iBAEnBsB,EAGF,OAKT,OAFiBuG,KAAKC,IAAL,MAAAD,KAAI,aAAQY,ID6CDG,CAAuB9I,GAE7C+I,EAAiBjE,KAAW,8BAA+B,CAC/D,kBAAmBlF,EACnB,2BAA4ByI,IAGxBW,EAAiBlE,KAAW,oBAAqB,CACrD,yBAA0BpF,EAC1B,2BAA4BC,IAG9B,OACE,0BAASyC,UAAW2G,EAApB,UACE,qBAAK9C,IAAKwC,EAAUrG,UAAU,0BAA9B,SACE,qBAAKE,IAAKvC,EAAOyC,MAAM,MAAMC,OAAO,MAAMC,IAAG,yCAAW7C,OAE1D,oBAAIuC,UAAW4G,EAAf,SAAgCnJ,IAChC,uBAAMoJ,SAxEgB,SAACvE,GACzBA,EAAIwE,iBAEJ,IAAMC,EAAW,CACfhJ,KACAX,SACAS,MAAOuH,EACPzH,QACAZ,OACAU,QACAQ,KAAM6H,EACN5H,QACAa,SAAU,IAG4D,IAA9CnC,EAAKoK,WAAU,SAAClI,GAAD,OAAUA,EAAKf,KAAOA,KAG7DgH,EAAYgC,GAEZ/B,EAAcjH,GAGhBiI,GAAY,SAACiB,GAAD,OAAUA,EAAO,MAiDQjH,UAAU,mBAAmBkH,OAAO,IAAvE,UACE,sBAAKlH,UAAU,uBAAf,UACE,2BAAUA,UAAU,oBAApB,UACE,wBAAQA,UAAU,kBAAlB,+DAECpC,EAAQiB,KAAI,WAAyCO,GAAW,IAAlDvB,EAAiD,EAAjDA,MAAWsJ,EAAsC,EAA1CpJ,GAAaD,EAA6B,EAA7BA,iBAC3BsJ,EAAmBhI,IAAUqH,EAEnC,OACE,oBAA+BzG,UAAU,4BAAzC,UACE,uBACEqH,SAAU,kBAAMhC,EAAexH,IAC/BmC,UAAU,oCACVjD,KAAK,QACLgB,GAAIoJ,EACJG,KAAK,QACLC,MAAOJ,EACPK,eAAgBJ,EAChBK,UAAW3J,IAEb,uBAAOkC,UAAU,oBAAoB0H,QAASP,EAA9C,SACGtJ,MAZL,UAAWA,EAAX,YAAoBsJ,UAkB1B,2BAAUnH,UAAU,oBAApB,UACE,wBAAQA,UAAU,kBAAlB,iFACChC,EAAWa,KAAI,WAAsBO,GAAW,IAA/BnB,EAA8B,EAA9BA,KAAME,EAAwB,EAAxBA,YAChBiJ,EAAmBhI,IAAUkH,EAEnC,OACE,oBAA4CtG,UAAU,4BAAtD,UACE,uBACEqH,SAAU,WACRtB,EAAc9H,IAEhB+B,UAAU,oCACVjC,GAAE,UAAKX,EAAL,YAAegI,EAAf,YAA8BnH,GAChClB,KAAK,QACLuK,KAAK,OACLC,MAAOtJ,EACPuJ,eAAgBJ,EAChBK,UAAWtJ,IAEb,uBAAO6B,UAAU,oBAAoB0H,QAAO,UAAKtK,EAAL,YAAegI,EAAf,YAA8BnH,GAA1E,mBACMA,EADN,sBAbF,UAAWb,EAAX,YAAqBgI,EAArB,YAAoCnH,aAsB5C,sBAAK+B,UAAU,qBAAf,UACE,oBAAGA,UAAU,oBAAb,0BAAqC9B,EAArC,aACA,yBAAQ8B,UAAU,qBAAqBjD,KAAK,SAA5C,UACE,sBAAKiD,UAAU,mBAAmBI,MAAM,KAAKC,OAAO,KAAKsH,QAAQ,YAAjE,UACE,sBACEC,EAAE,qNAIFC,KAAK,iBAEP,sBACED,EAAE,gUAMFC,KAAK,oBAGT,sBAAM7H,UAAU,0BAAhB,8DACA,sBAAMA,UAAU,uBAAhB,SAAwCjB,aAI7CkH,GACC,qBAAKjG,UAAU,yBAAf,SACE,oBAAGA,UAAU,wBAAb,mDAA8CtC,EAAUoK,0BErJnDrH,I,MAAAA,aALS,SAAClC,GAAD,MAAY,CAClC5B,gBAAiBmE,GAA2BvC,GAC5CwJ,eAAgBvG,GAA0BjD,MAG7BkC,EA3BG,SAAC,GAAuC,IAAtC9D,EAAqC,EAArCA,gBAAiBoL,EAAoB,EAApBA,eACnC,OACE,0BAAS/H,UAAU,aAAnB,UACE,qBAAIA,UAAU,oBAAd,UAAmCrD,EAAnC,qCACA,oBAAIqD,UAAU,mBAAd,SACG+H,EAAelJ,KAAI,SAACD,GACnB,OACE,oBAAuBoB,UAAU,mBAAjC,SACE,cAAC,GAAD,CAAWpB,MAAOA,KADXA,EAAMxB,oBCUZ4K,I,YA1BA,WACb,OACE,wBAAQhI,UAAU,sBAAlB,SACE,sBAAKA,UAAU,oBAAf,UACE,oBAAGA,UAAU,gBAAb,uBACa,IACX,mBAAGA,UAAU,eAAeiI,KAAK,uBAAuB1F,OAAO,SAAS2F,IAAI,aAA5E,8BAIF,oBAAGlI,UAAU,gBAAb,0BACgB,IACd,mBACEA,UAAU,eACViI,KAAK,6BACL1F,OAAO,SACP2F,IAAI,aAJN,mCCMKC,GAbE,WACf,OACE,sBAAKnI,UAAU,+BAAf,UACE,cAAC,GAAD,CAAQD,YAAU,IAClB,iCACE,cAAC,GAAD,IACA,cAAC,GAAD,OAEF,cAAC,GAAD,QC8DSU,I,MAAAA,YAAQ,MAZI,SAAC0B,GAAD,MAAe,CACxCiG,aAAc,SAACrK,GACboE,EAASjF,EAA6Ba,KAExCiH,cAAe,SAACjH,GACdoE,EAASjF,EAA8Ba,KAEzCsK,cAAe,SAACtK,GACdoE,EAASjF,EAA8Ba,QAI5B0C,EAvEG,SAAC,GAAyD,IAAxD7B,EAAuD,EAAvDA,MAAOwJ,EAAgD,EAAhDA,aAAcpD,EAAkC,EAAlCA,cAAeqD,EAAmB,EAAnBA,cAC/C5K,EAAkDmB,EAAlDnB,MAAOQ,EAA2CW,EAA3CX,KAAMC,EAAqCU,EAArCV,MAAOa,EAA8BH,EAA9BG,SAAUpB,EAAoBiB,EAApBjB,MAAOE,EAAae,EAAbf,MAAOE,EAAMa,EAANb,GAC7CuK,EAAWvJ,EAAWb,EAE5B,OACE,0BAAS8B,UAAU,mCAAnB,UACE,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,qBACEA,UAAU,kBACVE,IAAKvC,EACLyC,MAAM,KACNC,OAAO,KACPC,IAAG,yCAAW7C,OAGlB,sBAAKuC,UAAU,mBAAf,UACE,oBAAIA,UAAU,oBAAd,SAAmCvC,IACnC,oBAAGuC,UAAU,uBAAb,UACGnC,EADH,KACYI,EADZ,0BAKJ,sBAAK+B,UAAU,sBAAf,UACE,wBACEA,UAAU,qDACVjD,KAAK,SACL4F,QAAS,kBAAM0F,EAActK,IAH/B,SAKE,sBAAMiC,UAAU,kBAAhB,0KAEF,mBAAGA,UAAU,uBAAb,SAAqCjB,IACrC,wBACEiB,UAAU,qDACVjD,KAAK,SACL4F,QAAS,kBAAMqC,EAAcjH,IAH/B,SAKE,sBAAMiC,UAAU,kBAAhB,gMAGJ,oBAAGA,UAAU,oBAAb,UAAkCsI,EAAlC,YACA,wBACEtI,UAAU,wDACVjD,KAAK,SACL4F,QAAS,kBAAMyF,EAAarK,IAH9B,SAKE,sBAAMiC,UAAU,kBAAhB,wJCtBOS,I,MAAAA,aAJS,SAAClC,GAAD,MAAY,CAClC3B,KAAM0C,EAAgBf,MAGTkC,EAtBE,SAAC,GAAY,IAAX7D,EAAU,EAAVA,KACjB,OACE,oBAAIoD,UAAU,4BAAd,SACGpD,EAAKiC,KAAI,SAACD,GACT,OACE,oBAAIoB,UAAU,kBAAd,SACE,cAAC,GAAD,CAAWpB,MAAOA,KADiBA,EAAMb,aCmDtC0C,I,MAAAA,aAXS,SAAClC,GAAD,MAAY,CAClCsB,kBAAmBN,EAA6BhB,GAChDuB,eAAgBH,GAA0BpB,OAGjB,SAAC4D,GAAD,MAAe,CACxCoG,YAAa,WACXpG,EAASjF,SAIEuD,EAnDF,SAAC,GAAsD,IAArDZ,EAAoD,EAApDA,kBAAmBC,EAAiC,EAAjCA,eAAgByI,EAAiB,EAAjBA,YAChD,OACE,yBAASvI,UAAU,OAAnB,SACE,sBAAMA,UAAU,aAAaxB,OAAO,IAAI0I,OAAO,MAA/C,SACE,sBAAKlH,UAAU,gBAAf,UACE,sBAAKA,UAAU,eAAf,UACE,oBAAIA,UAAU,cAAd,wDACA,wBAAQA,UAAU,kBAAkBjD,KAAK,SAAS4F,QAAS4F,EAA3D,4GAIF,cAAC,GAAD,IACA,sBAAKvI,UAAU,eAAf,UACE,oBAAGA,UAAU,uBAAb,sEACc,iCAAOH,EAAP,uBAEd,oBAAGG,UAAU,oBAAb,kFACgB,iCAAOF,EAAP,kBAGlB,sBAAKE,UAAU,gBAAf,UACE,cAAC,IAAD,CAAMA,UAAU,iBAAiBC,GAAG,IAApC,mGAGA,wBAAQD,UAAU,eAAejD,KAAK,SAAtC,iHCnBGyL,I,MAfG,WAChB,OACE,0BAASxI,UAAU,aAAnB,UACE,oBAAIA,UAAU,oBAAd,6FACA,mBAAGA,UAAU,mBAAb,4iBAIA,cAAC,IAAD,CAAMA,UAAU,mBAAmBC,GAAG,IAAtC,0ECoBSQ,I,MAAAA,aAJS,SAAClC,GAAD,MAAY,CAClC3B,KAAM0C,EAAgBf,MAGTkC,EApBE,SAAC,GAAY,IACtBgI,EAA8B,IADT,EAAV7L,KACQ8L,OAEzB,OACE,sBAAK1I,UAAU,+BAAf,UACE,cAAC,GAAD,IACCyI,EAAc,cAAC,GAAD,IAAgB,cAAC,GAAD,IAC/B,cAAC,GAAD,WCMSE,I,MAlBH,WACV,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,OAAK,EAACxF,KAAK,IAAIyF,SAAUC,eAAhC,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,CAAOF,OAAK,EAACxF,KAAK,QAAlB,SACE,cAAC,GAAD,MAEF,cAAC,IAAD,UACE,8CCXJ2F,GAAQC,sBAAYC,EAAaC,iCAEvCC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,GAAjB,SACE,cAAC,IAAMM,WAAP,UACE,cAAC,GAAD,QAGJ5F,SAAS6F,eAAe,W","file":"static/js/main.c016745b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/pizza-logo.56ac8703.svg\";","export const SortType = {\n  POPULAR: 'популярности',\n  PRICE: 'цене',\n  ALPHABET: 'алфавиту',\n};\n\nexport const SORT_TYPE_DEFAULT = SortType.POPULAR;\n\nexport const PIZZA_TYPE_DEFAULT = 'Все';\n","import {SORT_TYPE_DEFAULT, PIZZA_TYPE_DEFAULT} from '../../../consts';\n\nconst initialState = {\n  isSortMenuOpen: false,\n  activeSortType: SORT_TYPE_DEFAULT,\n  activePizzaType: PIZZA_TYPE_DEFAULT,\n  cart: [],\n};\n\nexport const AppStateActionType = {\n  TOGGLE_SORT_MENU: 'TOGGLE_SORT_MENU',\n  CHANGE_SORT_TYPE: 'CHANGE_SORT_TYPE',\n  CHANGE_PIZZA_TYPE: 'CHANGE_PIZZA_TYPE',\n  RESET_SORT_MENU: 'RESET_SORT_MENU',\n  ADD_TO_CART: 'ADD_TO_CART',\n  RESET_FILTERS: 'RESET_FILTERS',\n};\n\nexport const AppStateActionCreator = {\n  toggledSortMenu: () => ({\n    type: AppStateActionType.TOGGLE_SORT_MENU,\n  }),\n  changeSortType: (payload) => ({\n    type: AppStateActionType.CHANGE_SORT_TYPE,\n    payload,\n  }),\n  changePizzaType: (payload) => ({\n    type: AppStateActionType.CHANGE_PIZZA_TYPE,\n    payload,\n  }),\n  resetSortMenu: () => ({\n    type: AppStateActionType.RESET_SORT_MENU,\n  }),\n  resetFilters: () => ({\n    type: AppStateActionType.RESET_FILTERS,\n  }),\n};\n\nexport const appState = (state = initialState, action) => {\n  switch (action.type) {\n    case AppStateActionType.TOGGLE_SORT_MENU:\n      return {...state, isSortMenuOpen: !state.isSortMenuOpen};\n\n    case AppStateActionType.CHANGE_SORT_TYPE:\n      return {...state, activeSortType: action.payload};\n\n    case AppStateActionType.CHANGE_PIZZA_TYPE:\n      return {...state, activePizzaType: action.payload};\n\n    case AppStateActionType.RESET_SORT_MENU:\n      return {...state, isSortMenuOpen: false};\n\n    case AppStateActionType.RESET_FILTERS:\n      return {\n        ...state,\n        isSortMenuOpen: false,\n        activePizzaType: PIZZA_TYPE_DEFAULT,\n        activeSortType: SORT_TYPE_DEFAULT,\n      };\n\n    default:\n      return state;\n  }\n};\n","import produce from 'immer';\n\nconst initialState = {\n  cart: [],\n};\n\nexport const CartActionType = {\n  ADD_TO_CART: 'ADD_TO_CART',\n  CHANGE_QUANTITY: 'CHANGE_QUANTITY',\n  CLEAR_CART: 'CLEAR_CART',\n  DELETE_ITEM: 'DELETE_ITEM',\n  INC_QUANTITY: 'INC_QUANTITY',\n  DEC_QUANTITY: 'DEC_QUANTITY',\n};\n\nexport const CartActionCreator = {\n  addToCart: (payload) => ({\n    type: CartActionType.ADD_TO_CART,\n    payload,\n  }),\n  changeQuantityToCart: (payload) => ({\n    type: CartActionType.CHANGE_QUANTITY,\n    payload,\n  }),\n  clearCart: () => ({\n    type: CartActionType.CLEAR_CART,\n  }),\n  deleteItem: (payload) => ({\n    type: CartActionType.DELETE_ITEM,\n    payload,\n  }),\n  incQuantity: (payload) => ({\n    type: CartActionType.INC_QUANTITY,\n    payload,\n  }),\n  decQuantity: (payload) => ({\n    type: CartActionType.DEC_QUANTITY,\n    payload,\n  }),\n};\n\nexport const cartReducer = (state = initialState, action) => {\n  return produce(state, (draft) => {\n    if (action.type === CartActionType.ADD_TO_CART) {\n      draft.cart.push(action.payload);\n    }\n\n    if (action.type === CartActionType.CHANGE_QUANTITY) {\n      const pizza = action.payload;\n\n      draft.cart.map((item) => {\n        if (item.id === pizza.id) {\n          item.quantity += 1;\n          return item;\n        }\n\n        return item;\n      });\n    }\n\n    if (action.type === CartActionType.CLEAR_CART) {\n      draft.cart = [];\n    }\n\n    if (action.type === CartActionType.DELETE_ITEM) {\n      const idForDelete = action.payload;\n      draft.cart = draft.cart.filter((item) => item.id !== idForDelete);\n    }\n\n    if (action.type === CartActionType.INC_QUANTITY) {\n      const idForInc = action.payload;\n      draft.cart.map((item) => {\n        if (item.id === idForInc) {\n          item.quantity += 1;\n          return item;\n        }\n\n        return item;\n      });\n    }\n\n    if (action.type === CartActionType.DEC_QUANTITY) {\n      const idForDec = action.payload;\n\n      draft.cart.map((item, index) => {\n        if (item.id === idForDec) {\n          if (item.quantity === 1) {\n            return draft.cart.splice(index, 1);\n          }\n\n          item.quantity -= 1;\n          return item;\n        }\n\n        return item;\n      });\n    }\n  });\n};\n","import pizzas from '../../../mocks/pizzas';\n\nconst initialState = {\n  pizzas,\n};\n\nexport const DataActionType = {\n  LOAD_PIZZAS: 'LOAD_PIZZAS',\n};\n\nexport const DataActionCreator = {\n  loadPizzas: (payload) => ({\n    type: DataActionType.LOAD_PIZZAS,\n    payload,\n  }),\n};\n\nexport const data = (state = initialState, action) => {\n  switch (action.type) {\n    case DataActionType.LOAD_PIZZAS:\n      return {...state, pizzas: action.payload};\n\n    default:\n      return state;\n  }\n};\n","import {nanoid} from 'nanoid';\n\nconst pizzas = [\n  {\n    typeId: nanoid(),\n    type: 'Мясные',\n    isHot: false,\n    isVegan: false,\n    isNew: false,\n    title: 'Чизбургер-пицца',\n    structure:\n      'Мясной соус болоньезе, моцарелла, красный лук, соленые огурчики, томаты, соус бургер',\n    image:\n      'https://dodopizza-a.akamaihd.net/static/Img/Products/8a813e3b734e457c848a60fc70a100d5_584x584.jpeg',\n    options: [\n      {\n        dough: 'Традиционное',\n        isAvailableDough: false,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 300, isAvailable: false},\n          {id: nanoid(), size: 30, price: 400, isAvailable: false},\n          {id: nanoid(), size: 40, price: 500, isAvailable: true},\n        ],\n      },\n      {\n        dough: 'Тонкое',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 500, isAvailable: false},\n          {id: nanoid(), size: 30, price: 600, isAvailable: true},\n          {id: nanoid(), size: 40, price: 800, isAvailable: true},\n        ],\n      },\n    ],\n  },\n\n  {\n    typeId: nanoid(),\n    type: 'Вегетарианские',\n    isHot: false,\n    isVegan: true,\n    isNew: false,\n    title: 'Сырная',\n    structure: 'Увеличенная порция моцареллы, томатный соус',\n    image:\n      'https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/f8ea1b5e-671d-4460-9e3d-ce720b95a1ce.jpg',\n    options: [\n      {\n        dough: 'Традиционное',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 200, isAvailable: true},\n          {id: nanoid(), size: 30, price: 300, isAvailable: true},\n          {id: nanoid(), size: 40, price: 400, isAvailable: true},\n        ],\n      },\n      {\n        dough: 'Тонкое',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 550, isAvailable: true},\n          {id: nanoid(), size: 30, price: 650, isAvailable: true},\n          {id: nanoid(), size: 40, price: 850, isAvailable: true},\n          {id: nanoid(), size: 44, price: 990, isAvailable: true},\n        ],\n      },\n      {\n        dough: 'Бортики',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 35, price: 800, isAvailable: true},\n          {id: nanoid(), size: 40, price: 1100, isAvailable: false},\n        ],\n      },\n    ],\n  },\n\n  {\n    typeId: nanoid(),\n    type: 'Мясные',\n    isHot: true,\n    isVegan: false,\n    isNew: false,\n    title: 'Мексиканская',\n    structure: `Острый цыпленок, томатный соус, сладкий перец, красный лук, \n    моцарелла, острый перец халапеньо, томаты, соус сальса`,\n    image:\n      'https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/a1f7da39-debe-4a2e-bfc9-82d747f5aeec.jpg',\n    options: [\n      {\n        dough: 'Традиционное',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 200, isAvailable: true},\n          {id: nanoid(), size: 30, price: 300, isAvailable: true},\n          {id: nanoid(), size: 40, price: 400, isAvailable: true},\n          {id: nanoid(), size: 44, price: 1050, isAvailable: true},\n        ],\n      },\n      {\n        dough: 'Тонкое',\n        isAvailableDough: false,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 550, isAvailable: true},\n          {id: nanoid(), size: 30, price: 650, isAvailable: true},\n          {id: nanoid(), size: 40, price: 850, isAvailable: true},\n        ],\n      },\n    ],\n  },\n\n  {\n    typeId: nanoid(),\n    type: 'Вегетарианские',\n    isHot: false,\n    isVegan: true,\n    isNew: true,\n    title: 'Пицца-пирог',\n    structure: 'Ананасы, брусника, молоко сгущенное',\n    image:\n      'https://dodopizza-a.akamaihd.net/static/Img/Products/Pizza/ru-RU/acf387b2-273b-41ab-82c8-d648ae4793cd.jpg',\n    options: [\n      {\n        dough: 'Тонкое',\n        isAvailableDough: true,\n        id: nanoid(),\n        conditions: [\n          {id: nanoid(), size: 26, price: 350, isAvailable: true},\n          {id: nanoid(), size: 30, price: 550, isAvailable: true},\n        ],\n      },\n    ],\n  },\n];\n\nexport default pizzas;\n","import {combineReducers} from 'redux';\nimport {appState} from './app-state/app-state';\nimport {cartReducer} from './cart/cart';\nimport {data} from './data/data';\n\nexport const NameSpace = {\n  APP_STATE: 'APP_STATE',\n  DATA: 'DATA',\n  CART: 'CART',\n};\n\nexport default combineReducers({\n  [NameSpace.APP_STATE]: appState,\n  [NameSpace.DATA]: data,\n  [NameSpace.CART]: cartReducer,\n});\n","import {createSelector} from 'reselect';\n\nimport {NameSpace} from '../root-reducer';\n\nimport {getSumQuantityInCart, getSumPriceInCart} from '../../../utils/cart';\n\nexport const getCartSelector = (state) => state[NameSpace.CART].cart;\n\nexport const getSumQuantityInCartSelector = createSelector(getCartSelector, getSumQuantityInCart);\n\nexport const getSumPriceInCartSelector = createSelector(getCartSelector, getSumPriceInCart);\n","export const getSumQuantityInCart = (cart) => {\n  if (!cart) {\n    return 0;\n  }\n\n  const quantity = cart.reduce((acc, item) => item.quantity + acc, 0);\n  return quantity;\n};\n\nexport const getSumPriceInCart = (cart) => {\n  if (!cart) {\n    return 0;\n  }\n\n  const price = cart.reduce((acc, item) => {\n    return acc + item.price * item.quantity;\n  }, 0);\n  return price;\n};\n","import React, {memo} from 'react';\nimport PropTypes from 'prop-types';\nimport {Link} from 'react-router-dom';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\n\nimport logo from '../../assets/img/pizza-logo.svg';\nimport {\n  getSumQuantityInCartSelector,\n  getSumPriceInCartSelector,\n} from '../../store/reducers/cart/selectors';\n\nimport './header.scss';\n\nconst Header = ({sumQuantityInCart, sumPriceInCart, isMainPage}) => {\n  return (\n    <header className=\"header\">\n      <Link to=\"/\" className=\"header__logo\">\n        <div className=\"header__img-wrapper\">\n          <img src={logo} width=\"38\" height=\"38\" alt=\"Логотип Реакт Пиццы\" />\n        </div>\n        <div className=\"header__logo-text\">\n          <h1 className=\"header__title\">React Pizza</h1>\n          <p className=\"header__subtitle\">самая вкусная пицца в мире</p>\n        </div>\n      </Link>\n      {isMainPage && (\n        <Link to=\"/cart\" className=\"header__order\">\n          <p className=\"header__price\">{sumPriceInCart} ₽</p>\n          <p className=\"header__quantity\">{sumQuantityInCart}</p>\n        </Link>\n      )}\n    </header>\n  );\n};\n\nHeader.propTypes = {\n  sumPriceInCart: PropTypes.number.isRequired,\n  sumQuantityInCart: PropTypes.number.isRequired,\n  isMainPage: PropTypes.bool,\n};\n\nHeader.defaultProps = {\n  isMainPage: false,\n};\n\nconst mapStateToProps = (state) => ({\n  sumQuantityInCart: getSumQuantityInCartSelector(state),\n  sumPriceInCart: getSumPriceInCartSelector(state),\n});\n\nexport default compose(connect(mapStateToProps), memo)(Header);\n","import {NameSpace} from '../root-reducer';\nimport {SortType} from '../../../consts';\n\nexport const getActiveSortTypeSelector = (state) => state[NameSpace.APP_STATE].activeSortType;\nexport const getSortMenuStatusSelector = (state) => state[NameSpace.APP_STATE].isSortMenuOpen;\nexport const getSortTypeSelector = () => SortType;\nexport const getActivePizzaTypeSelector = (state) => state[NameSpace.APP_STATE].activePizzaType;\n","import {SortType} from '../consts';\n\nexport const getTypesFilter = (pizzas) => {\n  const types = pizzas.map((pizza) => pizza.type).sort();\n  const uniqueTypes = ['Все', ...new Set(types)];\n\n  return uniqueTypes;\n};\n\nconst filterByAvailable = (pizza) => {\n  const {options} = pizza;\n  const filteredOptions = options\n    .filter((option) => option.isAvailableDough === true)\n    .map((option) => {\n      const filteredConditions = option.conditions.filter(({isAvailable}) => isAvailable === true);\n      return {...option, conditions: filteredConditions};\n    });\n\n  return {...pizza, options: filteredOptions};\n};\n\nexport const filterPizzas = (pizzas, activeType, activeSortType) => {\n  const filteredPizzasByDoughType = pizzas.filter((pizza) => {\n    if (pizza.type === activeType) {\n      return true;\n    }\n    if (activeType === 'Все') {\n      return true;\n    }\n\n    return false;\n  });\n\n  switch (activeSortType) {\n    case SortType.POPULAR:\n      return filteredPizzasByDoughType;\n\n    case SortType.PRICE:\n      return filteredPizzasByDoughType.slice().sort((a, b) => {\n        const onlyAvailableA = filterByAvailable(a);\n        const onlyAvailableB = filterByAvailable(b);\n\n        const priceA = onlyAvailableA.options[0].conditions[0].price;\n        const priceB = onlyAvailableB.options[0].conditions[0].price;\n\n        if (priceA > priceB) {\n          return 1;\n        }\n        if (priceA < priceB) {\n          return -1;\n        }\n        return 0;\n      });\n\n    case SortType.ALPHABET:\n      return filteredPizzasByDoughType.slice().sort((a, b) => {\n        if (a.title > b.title) {\n          return 1;\n        }\n        if (a.title < b.title) {\n          return -1;\n        }\n        return 0;\n      });\n    default:\n      return filteredPizzasByDoughType;\n  }\n};\n","import {createSelector} from 'reselect';\nimport {NameSpace} from '../root-reducer';\n\nimport {getTypesFilter, filterPizzas} from '../../../utils/filter';\nimport {getActivePizzaTypeSelector, getActiveSortTypeSelector} from '../app-state/selectors';\n\nexport const getPizzasSelector = (state) => state[NameSpace.DATA].pizzas;\n\nexport const getTypesFilterSelector = createSelector(getPizzasSelector, getTypesFilter);\n\nexport const getFilteredPizzasSelector = createSelector(\n  [getPizzasSelector, getActivePizzaTypeSelector, getActiveSortTypeSelector],\n  filterPizzas,\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\nimport classNames from 'classnames';\n\nimport {AppStateActionCreator} from '../../store/reducers/app-state/app-state';\nimport {getActivePizzaTypeSelector} from '../../store/reducers/app-state/selectors';\nimport {getTypesFilterSelector} from '../../store/reducers/data/selectors';\n\nimport './nav.scss';\n\nconst Nav = ({onChangePizzaType, activePizzaType, typesFilter}) => {\n  const changePizzaTypeHandler = (evt) => {\n    if (evt.target.innerText === activePizzaType) {\n      return;\n    }\n\n    onChangePizzaType(evt.target.innerText);\n  };\n\n  return (\n    <nav className=\"section-pizza__nav nav\">\n      <ul className=\"nav__list\">\n        {typesFilter.map((type) => {\n          const classes = classNames('nav__item', {\n            'nav__item--active': type === activePizzaType,\n          });\n\n          return (\n            <li key={type} className={classes}>\n              <Link className=\"nav__link\" to=\"/\" onClick={changePizzaTypeHandler}>\n                {type}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </nav>\n  );\n};\n\nNav.propTypes = {\n  onChangePizzaType: PropTypes.func.isRequired,\n  activePizzaType: PropTypes.string.isRequired,\n  typesFilter: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  activePizzaType: getActivePizzaTypeSelector(state),\n  typesFilter: getTypesFilterSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onChangePizzaType: (type) => {\n    dispatch(AppStateActionCreator.changePizzaType(type));\n    dispatch(AppStateActionCreator.resetSortMenu());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Nav);\n","import React, {useCallback, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport {\n  getSortTypeSelector,\n  getActiveSortTypeSelector,\n  getSortMenuStatusSelector,\n} from '../../store/reducers/app-state/selectors';\nimport {AppStateActionCreator} from '../../store/reducers/app-state/app-state';\n\nimport './sorting.scss';\n\nconst Sorting = ({\n  isSortMenuOpen,\n  onToggledSortMenu,\n  sortType,\n  activeSortType,\n  onChageSortType,\n  onResetSortMenu,\n}) => {\n  const sortingRef = useRef(null);\n  const toggledSortMenuEnterHandler = (evt) => {\n    if (evt.code === 'Enter') {\n      onToggledSortMenu();\n    }\n  };\n\n  const clickOutsideHandler = useCallback(\n    (evt) => {\n      const path = evt.path || (evt.composedPath && evt.composedPath());\n      if (!path.includes(sortingRef.current)) {\n        onResetSortMenu();\n      }\n    },\n    [onResetSortMenu],\n  );\n\n  useEffect(() => {\n    document.body.addEventListener('click', clickOutsideHandler);\n\n    return () => {\n      document.body.removeEventListener('click', clickOutsideHandler);\n    };\n  }, [clickOutsideHandler, isSortMenuOpen]);\n  return (\n    <div ref={sortingRef} className=\"section-pizza__sorting sorting\">\n      <span className=\"sorting__caption\">Сортировка по:</span>\n      <span\n        onClick={onToggledSortMenu}\n        onKeyDown={toggledSortMenuEnterHandler}\n        className=\"sorting__type\"\n        tabIndex=\"0\"\n        role=\"button\"\n      >\n        {activeSortType}\n      </span>\n      {isSortMenuOpen && (\n        <ul className=\"sorting__options\">\n          {Object.values(sortType).map((type) => {\n            return (\n              <li\n                key={type}\n                className={classNames('sorting__option', {\n                  'sorting__option--active': activeSortType === type,\n                })}\n                tabIndex=\"-1\"\n              >\n                <Link className=\"sorting__link\" to=\"/\" onClick={() => onChageSortType(type)}>\n                  {type}\n                </Link>\n              </li>\n            );\n          })}\n        </ul>\n      )}\n    </div>\n  );\n};\n\nSorting.propTypes = {\n  isSortMenuOpen: PropTypes.bool.isRequired,\n  onToggledSortMenu: PropTypes.func.isRequired,\n  sortType: PropTypes.object.isRequired,\n  activeSortType: PropTypes.string,\n  onChageSortType: PropTypes.func.isRequired,\n  onResetSortMenu: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  isSortMenuOpen: getSortMenuStatusSelector(state),\n  activeSortType: getActiveSortTypeSelector(state),\n  sortType: getSortTypeSelector(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onToggledSortMenu: () => {\n    dispatch(AppStateActionCreator.toggledSortMenu());\n  },\n  onResetSortMenu: () => {\n    dispatch(AppStateActionCreator.resetSortMenu());\n  },\n  onChageSortType: (type) => {\n    dispatch(AppStateActionCreator.changeSortType(type));\n    dispatch(AppStateActionCreator.toggledSortMenu());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Sorting);\n","import PropTypes from 'prop-types';\nimport {SortType} from '../consts';\n\nexport const pizzaCartPropTypes = PropTypes.shape({\n  id: PropTypes.string.isRequired,\n  typeId: PropTypes.string.isRequired,\n  type: PropTypes.string,\n  title: PropTypes.string,\n  size: PropTypes.number.isRequired,\n  price: PropTypes.number.isRequired,\n  quantity: PropTypes.number.isRequired,\n  image: PropTypes.string.isRequired,\n  dough: PropTypes.string.isRequired,\n});\n\nexport const cartPropTypes = PropTypes.arrayOf(pizzaCartPropTypes);\n\nexport const pizzaPropTypes = PropTypes.shape({\n  typeId: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  image: PropTypes.string.isRequired,\n  isHot: PropTypes.bool.isRequired,\n  isVegan: PropTypes.bool.isRequired,\n  isNew: PropTypes.bool.isRequired,\n  structure: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(\n    PropTypes.shape({\n      dough: PropTypes.string.isRequired,\n      id: PropTypes.string.isRequired,\n      conditions: PropTypes.arrayOf(\n        PropTypes.shape({\n          id: PropTypes.string.isRequired,\n          size: PropTypes.number.isRequired,\n          price: PropTypes.number.isRequired,\n        }),\n      ),\n    }),\n  ),\n});\n\nexport const sortTypesPropTypes = PropTypes.oneOf([...Object.values(SortType)]).isRequired;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport Nav from '../nav/nav';\nimport Sorting from '../sorting/sorting';\n\nimport {\n  getActivePizzaTypeSelector,\n  getActiveSortTypeSelector,\n  getSortTypeSelector,\n} from '../../store/reducers/app-state/selectors';\n\nimport {AppStateActionCreator} from '../../store/reducers/app-state/app-state';\n\nimport './section-pizza.scss';\nimport {sortTypesPropTypes} from '../../utils/prop-types';\n\nconst SectionPizza = ({activePizzaType, activeSortType, sortType, onResetFilters}) => {\n  const isShowResetBtn = activePizzaType !== 'Все' || activeSortType !== sortType.POPULAR;\n\n  return (\n    <section className=\"section-pizza\">\n      <h2 className=\"visually-hidden\">Выбрать вид пиццы</h2>\n      <div className=\"section-pizza__wrapper\">\n        <Nav />\n        <Sorting />\n      </div>\n      {isShowResetBtn && (\n        <button className=\"section-pizza__reset-btn\" type=\"button\" onClick={onResetFilters}>\n          Сбросить сортировку\n        </button>\n      )}\n    </section>\n  );\n};\n\nSectionPizza.propTypes = {\n  activePizzaType: PropTypes.string.isRequired,\n  activeSortType: sortTypesPropTypes,\n  sortType: PropTypes.object.isRequired,\n  onResetFilters: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  activePizzaType: getActivePizzaTypeSelector(state),\n  activeSortType: getActiveSortTypeSelector(state),\n  sortType: getSortTypeSelector(),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onResetFilters: () => {\n    dispatch(AppStateActionCreator.resetFilters());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SectionPizza);\n","import React, {useState, memo, useEffect, useRef} from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {compose} from 'redux';\nimport classNames from 'classnames';\n\nimport {CartActionCreator} from '../../store/reducers/cart/cart';\nimport {cartPropTypes, pizzaPropTypes} from '../../utils/prop-types';\n\nimport {\n  getDoughTypes,\n  getDefaultPizzaSize,\n  getAvailableMinSizeIndex,\n  getAvailableDoughIndex,\n} from '../../utils/pizza';\n\nimport {getCartSelector} from '../../store/reducers/cart/selectors';\n\nimport './pizza-card.scss';\n\nconst PizzaCard = ({pizza, onAddToCart, cart, onIncQuantity}) => {\n  const {typeId, title, type, image, options, isHot, isVegan, isNew, structure} = pizza;\n  const doughTypes = getDoughTypes(pizza);\n  const [activeDough, setActiveDough] = useState(doughTypes[0]);\n\n  const {conditions} = options.find((option) => option.dough === activeDough);\n  const defaultSize = getDefaultPizzaSize(conditions);\n  const [activeSize, setActiveSize] = useState(defaultSize);\n  const {price, id} = conditions.find((condition) => condition.size === activeSize) || {\n    price: 0,\n    id: 0,\n  };\n  const [quantity, setQuantity] = useState(0);\n\n  const formSubmitHandler = (evt) => {\n    evt.preventDefault();\n\n    const newPizza = {\n      id,\n      typeId,\n      dough: activeDough,\n      image,\n      type,\n      title,\n      size: activeSize,\n      price,\n      quantity: 1,\n    };\n\n    const isAvailableInCart = cart.findIndex((item) => item.id === id) === -1;\n\n    if (isAvailableInCart) {\n      onAddToCart(newPizza);\n    } else {\n      onIncQuantity(id);\n    }\n\n    setQuantity((prev) => prev + 1);\n  };\n\n  useEffect(() => {\n    setActiveSize(defaultSize);\n  }, [activeDough, defaultSize]);\n\n  const [isShownPopup, setIsShownPopup] = useState(false);\n\n  const enablePopupHandler = () => {\n    setIsShownPopup(true);\n  };\n\n  const disablePopupHandler = () => {\n    setIsShownPopup(false);\n  };\n\n  const imageRef = useRef(null);\n\n  useEffect(() => {\n    const {current} = imageRef;\n    current.addEventListener('mouseover', enablePopupHandler);\n    current.addEventListener('mouseout', disablePopupHandler);\n\n    return () => {\n      current.removeEventListener('mouseover', enablePopupHandler);\n      current.removeEventListener('mouseout', disablePopupHandler);\n    };\n  }, []);\n\n  const availableMinSizeIndex = getAvailableMinSizeIndex(conditions);\n  const availableDoughIndex = getAvailableDoughIndex(options);\n\n  const classNamesCard = classNames('pizza-list__item pizza-card', {\n    'pizza-card--new': isNew,\n    'pizza-card--popup-active': isShownPopup,\n  });\n\n  const classNameTitle = classNames('pizza-card__title', {\n    'pizza-card__title--hot': isHot,\n    'pizza-card__title--vegan': isVegan,\n  });\n\n  return (\n    <article className={classNamesCard}>\n      <div ref={imageRef} className=\"pizza-card__img-wrapper\">\n        <img src={image} width=\"260\" height=\"260\" alt={`Пицца ${title}`} />\n      </div>\n      <h3 className={classNameTitle}>{title}</h3>\n      <form onSubmit={formSubmitHandler} className=\"pizza-card__form\" method=\"#\">\n        <div className=\"pizza-card__controls\">\n          <fieldset className=\"pizza-card__field\">\n            <legend className=\"visually-hidden\">Вид теста</legend>\n\n            {options.map(({dough, id: idDough, isAvailableDough}, index) => {\n              const isDefaultChecked = index === availableDoughIndex;\n\n              return (\n                <p key={`${dough}-${idDough}`} className=\"pizza-card__input-wrapper\">\n                  <input\n                    onChange={() => setActiveDough(dough)}\n                    className=\"pizza-card__input visually-hidden\"\n                    type=\"radio\"\n                    id={idDough}\n                    name=\"dough\"\n                    value={idDough}\n                    defaultChecked={isDefaultChecked}\n                    disabled={!isAvailableDough}\n                  />\n                  <label className=\"pizza-card__label\" htmlFor={idDough}>\n                    {dough}\n                  </label>\n                </p>\n              );\n            })}\n          </fieldset>\n          <fieldset className=\"pizza-card__field\">\n            <legend className=\"visually-hidden\">Размер пиццы</legend>\n            {conditions.map(({size, isAvailable}, index) => {\n              const isDefaultChecked = index === availableMinSizeIndex;\n\n              return (\n                <p key={`${typeId}-${activeDough}-${size}`} className=\"pizza-card__input-wrapper\">\n                  <input\n                    onChange={() => {\n                      setActiveSize(size);\n                    }}\n                    className=\"pizza-card__input visually-hidden\"\n                    id={`${typeId}-${activeDough}-${size}`}\n                    type=\"radio\"\n                    name=\"size\"\n                    value={size}\n                    defaultChecked={isDefaultChecked}\n                    disabled={!isAvailable}\n                  />\n                  <label className=\"pizza-card__label\" htmlFor={`${typeId}-${activeDough}-${size}`}>\n                    {`${size} см.`}\n                  </label>\n                </p>\n              );\n            })}\n          </fieldset>\n        </div>\n\n        <div className=\"pizza-card__bottom\">\n          <p className=\"pizza-card__price\">от {price} Р</p>\n          <button className=\"pizza-card__button\" type=\"submit\">\n            <svg className=\"pizza-card__plus\" width=\"10\" height=\"10\" viewBox=\"0 0 10 10\">\n              <path\n                d=\"M5.92001 3.84V5.76V8.64C5.92001 9.17016 5.49017 9.6 4.96001\n                9.6C4.42985 9.6 4.00001 9.17016 4.00001\n                8.64L4 5.76L4.00001 3.84V0.96C4.00001 0.42984 4.42985 0 4.96001\n                0C5.49017 0 5.92001 0.42984 5.92001 0.96V3.84Z\"\n                fill=\"currentColor\"\n              />\n              <path\n                d=\"M5.75998 5.92001L3.83998 5.92001L0.959977\n                5.92001C0.429817 5.92001 -2.29533e-05 5.49017\n                -2.29301e-05 4.96001C-2.2907e-05 4.42985 0.429817\n                4.00001 0.959977 4.00001L3.83998 4L5.75998 4.00001L8.63998\n                4.00001C9.17014 4.00001 9.59998 4.42985 9.59998 4.96001C9.59998\n                5.49017 9.17014 5.92001 8.63998 5.92001L5.75998 5.92001Z\"\n                fill=\"currentColor\"\n              />\n            </svg>\n            <span className=\"pizza-card__button-text\">Добавить</span>\n            <span className=\"pizza-card__quantity\">{quantity}</span>\n          </button>\n        </div>\n      </form>\n      {isShownPopup && (\n        <div className=\"pizza-card__popup-info\">\n          <p className=\"pizza-card__structure\">Состав: {structure.toLowerCase()}</p>\n        </div>\n      )}\n    </article>\n  );\n};\n\nPizzaCard.propTypes = {\n  cart: cartPropTypes,\n  pizza: pizzaPropTypes,\n  onAddToCart: PropTypes.func.isRequired,\n  onIncQuantity: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  cart: getCartSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onAddToCart: (pizza) => {\n    dispatch(CartActionCreator.addToCart(pizza));\n  },\n  onIncQuantity: (id) => {\n    dispatch(CartActionCreator.incQuantity(id));\n  },\n});\n\nexport default compose(connect(mapStateToProps, mapDispatchToProps), memo)(PizzaCard);\n","export const getDoughTypes = (pizza) => {\n  const doughTypes = pizza.options\n    .filter(({isAvailableDough}) => isAvailableDough === true)\n    .map((option) => option.dough);\n\n  return doughTypes;\n};\n\nexport const getAvailableConditions = (conditions) => {\n  const isAvailableConditions = conditions.filter(({isAvailable}) => isAvailable === true);\n  return isAvailableConditions;\n};\n\nexport const getDefaultPizzaSize = (conditions) => {\n  const isAvailableConditions = getAvailableConditions(conditions);\n  const sizes = isAvailableConditions.map((condition) => condition.size);\n  const minSize = Math.min(...sizes);\n  return minSize;\n};\n\nexport const getAvailableMinSizeIndex = (conditions) => {\n  const indexes = conditions.map(({isAvailable}, index) => {\n    if (isAvailable) {\n      return index;\n    }\n\n    return 999;\n  });\n\n  const minIndex = Math.min(...indexes);\n\n  return minIndex;\n};\n\nexport const getAvailableDoughIndex = (options) => {\n  const indexes = options.map(({isAvailableDough}, index) => {\n    if (isAvailableDough) {\n      return index;\n    }\n\n    return 999;\n  });\n\n  const minIndex = Math.min(...indexes);\n\n  return minIndex;\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\n\nimport PizzaCard from '../pizza-card/pizza-card';\n\nimport {pizzaPropTypes} from '../../utils/prop-types';\n\nimport {getActivePizzaTypeSelector} from '../../store/reducers/app-state/selectors';\nimport {getFilteredPizzasSelector} from '../../store/reducers/data/selectors';\n\nimport './pizza-list.scss';\n\nconst PizzaList = ({activePizzaType, filteredPizzas}) => {\n  return (\n    <section className=\"pizza-list\">\n      <h2 className=\"pizza-list__title\">{activePizzaType} пиццы</h2>\n      <ul className=\"pizza-list__list\">\n        {filteredPizzas.map((pizza) => {\n          return (\n            <li key={pizza.typeId} className=\"pizza-list__item\">\n              <PizzaCard pizza={pizza} />\n            </li>\n          );\n        })}\n      </ul>\n    </section>\n  );\n};\n\nPizzaList.propTypes = {\n  activePizzaType: PropTypes.string.isRequired,\n  filteredPizzas: PropTypes.arrayOf(PropTypes.shape({pizzaPropTypes})),\n};\n\nconst mapStateToProps = (state) => ({\n  activePizzaType: getActivePizzaTypeSelector(state),\n  filteredPizzas: getFilteredPizzasSelector(state),\n});\n\nexport default connect(mapStateToProps)(PizzaList);\n","import React from 'react';\n\nimport './footer.scss';\n\nconst Footer = () => {\n  return (\n    <footer className=\"page__footer footer\">\n      <div className=\"footer__copyright\">\n        <p className=\"footer__label\">\n          Design by:{' '}\n          <a className=\"footer__link\" href=\"https://archakov.im/\" target=\"_blank\" rel=\"noreferrer\">\n            Archakov Blog\n          </a>\n        </p>\n        <p className=\"footer__label\">\n          Developed by:{' '}\n          <a\n            className=\"footer__link\"\n            href=\"https://github.com/maxorrs\"\n            target=\"_blank\"\n            rel=\"noreferrer\"\n          >\n            Max Strokov\n          </a>\n        </p>\n      </div>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import React from 'react';\n\nimport Header from '../../header/header';\nimport SectionPizza from '../../section-pizza/section-pizza';\nimport PizzaList from '../../pizza-list/pizza-list';\n\nimport './main-page.scss';\nimport Footer from '../../footer/footer';\n\nconst MainPage = () => {\n  return (\n    <div className=\"page page--yellow page--main\">\n      <Header isMainPage />\n      <main>\n        <SectionPizza />\n        <PizzaList />\n      </main>\n      <Footer />\n    </div>\n  );\n};\n\nexport default MainPage;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {CartActionCreator} from '../../store/reducers/cart/cart';\nimport {pizzaCartPropTypes} from '../../utils/prop-types';\n\nimport './pizza-cart.scss';\n\nconst PizzaCart = ({pizza, onDeleteItem, onIncQuantity, onDecQuantity}) => {\n  const {title, size, price, quantity, image, dough, id} = pizza;\n  const sumPrice = quantity * price;\n\n  return (\n    <section className=\"cart-list__pizza-cart pizza-cart\">\n      <div className=\"pizza-cart__info\">\n        <div className=\"pizza-cart__img-wrapper\">\n          <img\n            className=\"pizza-cart__img\"\n            src={image}\n            width=\"80\"\n            height=\"80\"\n            alt={`Пицца ${title}`}\n          />\n        </div>\n        <div className=\"pizza-cart__name\">\n          <h3 className=\"pizza-cart__title\">{title}</h3>\n          <p className=\"pizza-cart__subtitle\">\n            {dough}, {size} см.\n          </p>\n        </div>\n      </div>\n      <div className=\"pizza-cart__actions\">\n        <button\n          className=\"pizza-cart__action-btn pizza-cart__action-btn--dec\"\n          type=\"button\"\n          onClick={() => onDecQuantity(id)}\n        >\n          <span className=\"visually-hidden\">Удалить одну пиццу из корзины</span>\n        </button>\n        <p className=\"pizza-cart__quantity\">{quantity}</p>\n        <button\n          className=\"pizza-cart__action-btn pizza-cart__action-btn--inc\"\n          type=\"button\"\n          onClick={() => onIncQuantity(id)}\n        >\n          <span className=\"visually-hidden\">Добавить еще одну пиццу в корзину</span>\n        </button>\n      </div>\n      <p className=\"pizza-cart__price\">{sumPrice}Р</p>\n      <button\n        className=\"pizza-cart__action-btn pizza-cart__action-btn--delete\"\n        type=\"button\"\n        onClick={() => onDeleteItem(id)}\n      >\n        <span className=\"visually-hidden\">Удалить пиццу из корзины</span>\n      </button>\n    </section>\n  );\n};\n\nPizzaCart.propTypes = {\n  pizza: pizzaCartPropTypes,\n  onDeleteItem: PropTypes.func.isRequired,\n  onIncQuantity: PropTypes.func.isRequired,\n  onDecQuantity: PropTypes.func.isRequired,\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  onDeleteItem: (id) => {\n    dispatch(CartActionCreator.deleteItem(id));\n  },\n  onIncQuantity: (id) => {\n    dispatch(CartActionCreator.incQuantity(id));\n  },\n  onDecQuantity: (id) => {\n    dispatch(CartActionCreator.decQuantity(id));\n  },\n});\n\nexport default connect(null, mapDispatchToProps)(PizzaCart);\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport PizzaCart from '../pizza-cart/pizza-cart';\n\nimport {getCartSelector} from '../../store/reducers/cart/selectors';\nimport {cartPropTypes} from '../../utils/prop-types';\n\nimport './cart-list.scss';\n\nconst CartList = ({cart}) => {\n  return (\n    <ul className=\"cart__cart-list cart-list\">\n      {cart.map((pizza) => {\n        return (\n          <li className=\"cart-list__item\" key={pizza.id}>\n            <PizzaCart pizza={pizza} />\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\n\nCartList.propTypes = {\n  cart: cartPropTypes,\n};\n\nconst mapStateToProps = (state) => ({\n  cart: getCartSelector(state),\n});\n\nexport default connect(mapStateToProps)(CartList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {connect} from 'react-redux';\nimport {Link} from 'react-router-dom';\n\nimport CartList from '../cart-list/cart-list';\n\nimport {\n  getSumQuantityInCartSelector,\n  getSumPriceInCartSelector,\n} from '../../store/reducers/cart/selectors';\n\nimport './cart.scss';\nimport {CartActionCreator} from '../../store/reducers/cart/cart';\n\nconst Cart = ({sumQuantityInCart, sumPriceInCart, onClearCart}) => {\n  return (\n    <section className=\"cart\">\n      <form className=\"cart__form\" action=\"#\" method=\"GET\">\n        <div className=\"cart__wrapper\">\n          <div className=\"cart__header\">\n            <h1 className=\"cart__title\">Корзина</h1>\n            <button className=\"cart__reset-btn\" type=\"button\" onClick={onClearCart}>\n              Очистить корзину\n            </button>\n          </div>\n          <CartList />\n          <div className=\"cart__bottom\">\n            <p className=\"cart__total-quantity\">\n              Всего пицц: <span>{sumQuantityInCart} шт.</span>\n            </p>\n            <p className=\"cart__total-price\">\n              Сумма заказа: <span>{sumPriceInCart}Р</span>\n            </p>\n          </div>\n          <div className=\"cart__actions\">\n            <Link className=\"cart__back-btn\" to=\"/\">\n              Вернуться назад\n            </Link>\n            <button className=\"cart__submit\" type=\"submit\">\n              Оплатить сейчас\n            </button>\n          </div>\n        </div>\n      </form>\n    </section>\n  );\n};\n\nCart.propTypes = {\n  sumQuantityInCart: PropTypes.number.isRequired,\n  sumPriceInCart: PropTypes.number.isRequired,\n  onClearCart: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  sumQuantityInCart: getSumQuantityInCartSelector(state),\n  sumPriceInCart: getSumPriceInCartSelector(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n  onClearCart: () => {\n    dispatch(CartActionCreator.clearCart());\n  },\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\n","import React from 'react';\nimport {Link} from 'react-router-dom';\n\nimport './cart-empty.scss';\n\nconst CartEmpty = () => {\n  return (\n    <section className=\"cart-empty\">\n      <h1 className=\"cart-empty__title\">Корзина пустая</h1>\n      <p className=\"cart-empty__info\">\n        Вероятней всего, вы не заказывали еще пиццу. Для того, чтобы заказать пиццу, перейдите на\n        главную страницу.\n      </p>\n      <Link className=\"cart-empty__link\" to=\"/\">\n        На главную\n      </Link>\n    </section>\n  );\n};\n\nexport default CartEmpty;\n","import React from 'react';\nimport {connect} from 'react-redux';\n\nimport Header from '../../header/header';\nimport Cart from '../../cart/cart';\nimport CartEmpty from '../../cart-empty/cart-empty';\nimport Footer from '../../footer/footer';\n\nimport {getCartSelector} from '../../../store/reducers/cart/selectors';\nimport {cartPropTypes} from '../../../utils/prop-types';\n\nimport './cart-page.scss';\n\nconst CartPage = ({cart}) => {\n  const isEmptyCart = cart.length === 0;\n\n  return (\n    <div className=\"page page--yellow page--cart\">\n      <Header />\n      {isEmptyCart ? <CartEmpty /> : <Cart />}\n      <Footer />\n    </div>\n  );\n};\n\nCartPage.propTypes = {\n  cart: cartPropTypes,\n};\n\nconst mapStateToProps = (state) => ({\n  cart: getCartSelector(state),\n});\n\nexport default connect(mapStateToProps)(CartPage);\n","import React from 'react';\nimport {Switch, Route, BrowserRouter} from 'react-router-dom';\n\nimport MainPage from '../pages/main-page/main-page';\nimport CartPage from '../pages/cart-page/cart-page';\n\nimport '../../scss/style.scss';\n\nconst App = () => {\n  return (\n    <BrowserRouter>\n      <Switch>\n        <Route exact path=\"/\" basename={process.env.PUBLIC_URL}>\n          <MainPage />\n        </Route>\n        <Route exact path=\"/cart\">\n          <CartPage />\n        </Route>\n        <Route>\n          <h1>404</h1>\n        </Route>\n      </Switch>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {createStore} from 'redux';\nimport {Provider} from 'react-redux';\nimport {composeWithDevTools} from 'redux-devtools-extension';\nimport App from './components/app/app';\nimport rootReducer from './store/reducers/root-reducer';\n\nconst store = createStore(rootReducer, composeWithDevTools());\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}